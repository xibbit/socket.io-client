{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///socket.io.slim.js","webpack:///webpack/bootstrap 0e52f082b1f04d992e07","webpack:///./lib/index.js","webpack:///./lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./support/noop.js","webpack:///./~/socket.io-parser/index.js","webpack:///./~/component-emitter/index.js","webpack:///./~/socket.io-parser/binary.js","webpack:///./~/isarray/index.js","webpack:///./~/socket.io-parser/is-buffer.js","webpack:///./lib/manager.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-parser/lib/keys.js","webpack:///./~/has-binary2/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/engine.io-parser/lib/utf8.js","webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./lib/socket.js","webpack:///./~/to-array/index.js","webpack:///./lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","lookup","uri","opts","_typeof","undefined","io","parsed","url","source","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","query","socket","Symbol","iterator","obj","constructor","prototype","parser","managers","protocol","connect","Socket","loc","location","host","charAt","test","parseuri","port","ipv6","indexOf","href","re","parts","str","src","b","e","substring","replace","length","exec","i","authority","ipv6uri","Encoder","encodeAsString","type","BINARY_EVENT","BINARY_ACK","attachments","nsp","data","payload","tryStringify","ERROR_PACKET","JSON","stringify","encodeAsBinary","callback","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","unshift","removeBlobs","Decoder","reconstructor","decodeString","Number","types","error","buf","Error","next","tryParse","substr","isPayloadValid","ERROR","isArray","parse","BinaryReconstructor","reconPack","msg","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","encode","encoding","add","emit","base64","takeBinaryData","destroy","finishedReconstruction","binData","push","reconstructPacket","mixin","key","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","slice","len","listeners","hasListeners","_deconstructPacket","placeholder","_placeholder","num","newData","Array","Date","_reconstructPacket","toString","Object","withNativeBlob","Blob","withNativeFile","File","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","FileReader","onload","result","readAsArrayBuffer","arr","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","ArrayBuffer","isView","buffer","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","readyState","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","open","eio","bind","has","hasOwnProperty","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","self","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","write","options","processPacketQueue","shift","subsLength","sub","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","outOfBand","hostname","secure","agent","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","navigator","product","toLowerCase","extraHeaders","keys","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","priorWebsocketSuccess","Transport","createTransport","name","EIO","transport","sid","requestTimeout","protocols","setTransport","onOutOfBand","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","l","onHandshake","setPing","code","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","j","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","hasCORS","XDomainRequest","concat","join","empty","Polling","Request","method","async","isBinary","create","unloadHandler","requests","abort","inherit","request","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","responseType","status","document","requestsCount","onSuccess","fromError","response","attachEvent","terminationEvent","hasXHR2","yeast","doOpen","poll","onPause","total","decodePayload","doClose","cleanData","matchPos","startsWith","pos","prev","start","end","del","heur","parseInt","packets","callbackfn","encodePayload","schema","b64","description","decodePacket","encodeBase64Object","message","encodeArrayBuffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeBlobAsArrayBuffer","fr","encodePacket","encodeBlob","dontSendBlobs","blob","tryDecode","utf8","strict","map","ary","each","done","after","eachWithIndex","el","base64encoder","hasBinary","sliceBuffer","isAndroid","userAgent","isPhantomJS","pong","noop","packetslist","utf8encode","encoded","String","split","readAsDataURL","b64data","fromCharCode","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","decodePayloadAsBinary","n","chr","ret","totalLength","reduce","acc","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","tailArray","msgLength","toJSON","arraybuffer","bytes","abv","ii","count","err_cb","proxy","bail","ucs2decode","string","value","extra","output","counter","ucs2encode","array","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","version","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","part","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","a","blobSupportsArrayBufferView","blobBuilderSupported","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","alphabet","Math","floor","decoded","now","seed","global","glob","window","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","complete","initIframe","html","iframeId","area","className","style","position","top","left","target","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocketImpl","NodeWebSocket","WebSocket","MozWebSocket","check","headers","ws","supports","addEventListeners","onmessage","ev","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","list","ms","factor","pow","rand","random","deviation"],"mappings":"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","file":"socket.io.slim.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar url = __webpack_require__(1);\n\tvar parser = __webpack_require__(4);\n\tvar Manager = __webpack_require__(9);\n\tvar debug = __webpack_require__(3)('socket.io-client');\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\r\n\t * Managers cache.\r\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\r\n\t * Looks up an existing `Manager` for multiplexing.\r\n\t * If the user summons:\r\n\t *\r\n\t *   `io('http://localhost/a');`\r\n\t *   `io('http://localhost/b');`\r\n\t *\r\n\t * We reuse the existing instance based on same scheme/port/host,\r\n\t * and we initialize sockets for each namespace.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t\n\t/**\r\n\t * Protocol version.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\r\n\t * `connect`.\r\n\t *\r\n\t * @param {String} uri\r\n\t * @api public\r\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\r\n\t * Expose constructors for standalone build.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\texports.Manager = __webpack_require__(9);\n\texports.Socket = __webpack_require__(33);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar parseuri = __webpack_require__(2);\n\tvar debug = __webpack_require__(3)('socket.io-client:url');\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\r\n\t * URL parser.\r\n\t *\r\n\t * @param {String} url\r\n\t * @param {Object} An object meant to mimic window.location.\r\n\t *                 Defaults to window.location.\r\n\t * @api public\r\n\t */\n\t\n\tfunction url(uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || typeof location !== 'undefined' && location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n\t\n\t  return obj;\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Parses an URI\r\n\t *\r\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\t\r\n\tvar parts = [\r\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n\t];\r\n\t\r\n\tmodule.exports = function parseuri(str) {\r\n\t    var src = str,\r\n\t        b = str.indexOf('['),\r\n\t        e = str.indexOf(']');\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n\t    }\r\n\t\r\n\t    var m = re.exec(str || ''),\r\n\t        uri = {},\r\n\t        i = 14;\r\n\t\r\n\t    while (i--) {\r\n\t        uri[parts[i]] = m[i] || '';\r\n\t    }\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        uri.source = src;\r\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n\t        uri.ipv6uri = true;\r\n\t    }\r\n\t\r\n\t    return uri;\r\n\t};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  return function () {};\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(3)('socket.io-parser');\n\tvar Emitter = __webpack_require__(5);\n\tvar binary = __webpack_require__(6);\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\tvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t\n\t\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  } else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t\n\t  // first is type\n\t  var str = '' + obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    str += obj.attachments + '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' !== obj.nsp) {\n\t    str += obj.nsp + ',';\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    var payload = tryStringify(obj.data);\n\t    if (payload !== false) {\n\t      str += payload;\n\t    } else {\n\t      return ERROR_PACKET;\n\t    }\n\t  }\n\t\n\t\n\t  return str;\n\t}\n\t\n\tfunction tryStringify(str) {\n\t  try {\n\t    return JSON.stringify(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an encoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if (typeof obj === 'string') {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  } else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  } else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var i = 0;\n\t  // look up type\n\t  var p = {\n\t    type: Number(str.charAt(0))\n\t  };\n\t\n\t  if (null == exports.types[p.type]) {\n\t    return error('unknown packet type ' + p.type);\n\t  }\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) !== '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) !== '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' === str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' === c) break;\n\t      p.nsp += c;\n\t      if (i === str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i === str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    var payload = tryParse(str.substr(i));\n\t    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\t    if (isPayloadValid) {\n\t      p.data = payload;\n\t    } else {\n\t      return error('invalid payload');\n\t    }\n\t  }\n\t\n\t\n\t  return p;\n\t}\n\t\n\tfunction tryParse(str) {\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(msg) {\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error: ' + msg\n\t  };\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\n\tvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet) {\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData, buffers);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\tfunction _deconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (isBuf(data)) {\n\t    var placeholder = { _placeholder: true, num: buffers.length };\n\t    buffers.push(data);\n\t    return placeholder;\n\t  } else if (isArray(data)) {\n\t    var newData = new Array(data.length);\n\t    for (var i = 0; i < data.length; i++) {\n\t      newData[i] = _deconstructPacket(data[i], buffers);\n\t    }\n\t    return newData;\n\t  } else if (typeof data === 'object' && !(data instanceof Date)) {\n\t    var newData = {};\n\t    for (var key in data) {\n\t      newData[key] = _deconstructPacket(data[key], buffers);\n\t    }\n\t    return newData;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  packet.data = _reconstructPacket(packet.data, buffers);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\tfunction _reconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (data && data._placeholder) {\n\t    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t  } else if (isArray(data)) {\n\t    for (var i = 0; i < data.length; i++) {\n\t      data[i] = _reconstructPacket(data[i], buffers);\n\t    }\n\t  } else if (typeof data === 'object') {\n\t    for (var key in data) {\n\t      data[key] = _reconstructPacket(data[key], buffers);\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((withNativeBlob && obj instanceof Blob) ||\n\t        (withNativeFile && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = isBuf;\n\t\n\tvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\n\tvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\t\n\tvar isView = function (obj) {\n\t  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n\t};\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n\t          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n\t}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar eio = __webpack_require__(10);\n\tvar Socket = __webpack_require__(33);\n\tvar Emitter = __webpack_require__(5);\n\tvar parser = __webpack_require__(4);\n\tvar on = __webpack_require__(35);\n\tvar bind = __webpack_require__(36);\n\tvar debug = __webpack_require__(3)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(32);\n\tvar Backoff = __webpack_require__(37);\n\t\n\t/**\r\n\t * IE6+ hasOwnProperty\r\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\r\n\t * Module exports\r\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\r\n\t * `Manager` constructor.\r\n\t *\r\n\t * @param {String} engine instance or engine uri/opts\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\n\t\n\tfunction Manager(uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  var _parser = opts.parser || parser;\n\t  this.encoder = new _parser.Encoder();\n\t  this.decoder = new _parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\r\n\t * Propagate given event to sockets and emit on `this`\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * Update `socket.id` of all sockets\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.generateId(nsp);\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * generate `socket.id` for the given `nsp`\r\n\t *\r\n\t * @param {String} nsp\r\n\t * @return {String}\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.generateId = function (nsp) {\n\t  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n\t};\n\t\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\r\n\t * Sets the `reconnection` config.\r\n\t *\r\n\t * @param {Boolean} true/false if it should automatically reconnect\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the reconnection attempts config.\r\n\t *\r\n\t * @param {Number} max reconnection attempts before giving up\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the delay between reconnections.\r\n\t *\r\n\t * @param {Number} delay\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the maximum delay between reconnections.\r\n\t *\r\n\t * @param {Number} delay\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the connection timeout. `false` to disable\r\n\t *\r\n\t * @return {Manager} self or value\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Starts trying to reconnect if reconnection is enabled and we have not\r\n\t * started reconnecting yet\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\r\n\t * Sets the current transport `socket`.\r\n\t *\r\n\t * @param {Function} optional, callback\r\n\t * @return {Manager} self\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n\t\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Called upon transport open.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\r\n\t * Called upon a ping.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\r\n\t * Called upon a packet.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\r\n\t * Called with data.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\r\n\t * Called when parser fully decodes a packet.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\r\n\t * Called upon socket error.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\r\n\t * Creates a new socket for the given `nsp`.\r\n\t *\r\n\t * @return {Socket}\r\n\t * @api public\r\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.generateId(nsp);\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting event is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\r\n\t * Called upon a socket close.\r\n\t *\r\n\t * @param {Socket} socket\r\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\r\n\t * Writes a packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else {\n\t    // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\r\n\t * If packet buffer is non-empty, begins encoding the\r\n\t * next packet in line.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\r\n\t * Clean up transport subscriptions and packet buffer.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\r\n\t * Close the current socket.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.close = Manager.prototype.disconnect = function () {\n\t\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\r\n\t * Called upon engine close.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\r\n\t * Attempt a reconnection.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon successful reconnect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\tmodule.exports = __webpack_require__(11);\r\n\t\r\n\t/**\r\n\t * Exports parser\r\n\t *\r\n\t * @api public\r\n\t *\r\n\t */\r\n\tmodule.exports.parser = __webpack_require__(18);\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar transports = __webpack_require__(12);\r\n\tvar Emitter = __webpack_require__(5);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:socket');\r\n\tvar index = __webpack_require__(32);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar parseuri = __webpack_require__(2);\r\n\tvar parseqs = __webpack_require__(26);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Socket;\r\n\t\r\n\t/**\r\n\t * Socket constructor.\r\n\t *\r\n\t * @param {String|Object} uri or options\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Socket (uri, opts) {\r\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\t\r\n\t  opts = opts || {};\r\n\t  this.outOfBand = opts.outOfBand || function() {};\r\n\t\r\n\t  if (uri && 'object' === typeof uri) {\r\n\t    opts = uri;\r\n\t    uri = null;\r\n\t  }\r\n\t\r\n\t  if (uri) {\r\n\t    uri = parseuri(uri);\r\n\t    opts.hostname = uri.host;\r\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n\t    opts.port = uri.port;\r\n\t    if (uri.query) opts.query = uri.query;\r\n\t  } else if (opts.host) {\r\n\t    opts.hostname = parseuri(opts.host).host;\r\n\t  }\r\n\t\r\n\t  this.secure = null != opts.secure ? opts.secure\r\n\t    : (typeof location !== 'undefined' && 'https:' === location.protocol);\r\n\t\r\n\t  if (opts.hostname && !opts.port) {\r\n\t    // if no port is specified manually, use the protocol default\r\n\t    opts.port = this.secure ? '443' : '80';\r\n\t  }\r\n\t\r\n\t  this.agent = opts.agent || false;\r\n\t  this.hostname = opts.hostname ||\r\n\t    (typeof location !== 'undefined' ? location.hostname : 'localhost');\r\n\t  this.port = opts.port || (typeof location !== 'undefined' && location.port\r\n\t      ? location.port\r\n\t      : (this.secure ? 443 : 80));\r\n\t  this.query = opts.query || {};\r\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n\t  this.upgrade = false !== opts.upgrade;\r\n\t  this.path = (opts.path || '/engine.io');\r\n\t  if ('string' === typeof this.path) this.path = this.path.replace(/\\/$/, '') + '/';\r\n\t  this.forceJSONP = !!opts.forceJSONP;\r\n\t  this.jsonp = false !== opts.jsonp;\r\n\t  this.forceBase64 = !!opts.forceBase64;\r\n\t  this.enablesXDR = !!opts.enablesXDR;\r\n\t  this.timestampParam = opts.timestampParam || 't';\r\n\t  this.timestampRequests = opts.timestampRequests;\r\n\t  this.transports = opts.transports || ['polling', 'websocket'];\r\n\t  this.transportOptions = opts.transportOptions || {};\r\n\t  this.readyState = '';\r\n\t  this.writeBuffer = [];\r\n\t  this.prevBufferLen = 0;\r\n\t  this.policyPort = opts.policyPort || 843;\r\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n\t  this.binaryType = null;\r\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\t\r\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n\t    this.perMessageDeflate.threshold = 1024;\r\n\t  }\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx || null;\r\n\t  this.key = opts.key || null;\r\n\t  this.passphrase = opts.passphrase || null;\r\n\t  this.cert = opts.cert || null;\r\n\t  this.ca = opts.ca || null;\r\n\t  this.ciphers = opts.ciphers || null;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n\t  this.forceNode = !!opts.forceNode;\r\n\t\r\n\t  // detect ReactNative environment\r\n\t  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\r\n\t\r\n\t  // other options for Node.js or ReactNative client\r\n\t  if (typeof self === 'undefined' || this.isReactNative) {\r\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n\t      this.extraHeaders = opts.extraHeaders;\r\n\t    }\r\n\t\r\n\t    if (opts.localAddress) {\r\n\t      this.localAddress = opts.localAddress;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // set on handshake\r\n\t  this.id = null;\r\n\t  this.upgrades = null;\r\n\t  this.pingInterval = null;\r\n\t  this.pingTimeout = null;\r\n\t\r\n\t  // set on heartbeat\r\n\t  this.pingIntervalTimer = null;\r\n\t  this.pingTimeoutTimer = null;\r\n\t\r\n\t  this.open();\r\n\t}\r\n\t\r\n\tSocket.priorWebsocketSuccess = false;\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Socket.prototype);\r\n\t\r\n\t/**\r\n\t * Protocol version.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.protocol = parser.protocol; // this is an int\r\n\t\r\n\t/**\r\n\t * Expose deps for legacy compatibility\r\n\t * and standalone browser access.\r\n\t */\r\n\t\r\n\tSocket.Socket = Socket;\r\n\tSocket.Transport = __webpack_require__(17);\r\n\tSocket.transports = __webpack_require__(12);\r\n\tSocket.parser = __webpack_require__(18);\r\n\t\r\n\t/**\r\n\t * Creates transport of the given type.\r\n\t *\r\n\t * @param {String} transport name\r\n\t * @return {Transport}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.createTransport = function (name) {\r\n\t\r\n\t  var query = clone(this.query);\r\n\t\r\n\t  // append engine.io protocol identifier\r\n\t  query.EIO = parser.protocol;\r\n\t\r\n\t  // transport name\r\n\t  query.transport = name;\r\n\t\r\n\t  // per-transport options\r\n\t  var options = this.transportOptions[name] || {};\r\n\t\r\n\t  // session id if we already have one\r\n\t  if (this.id) query.sid = this.id;\r\n\t\r\n\t  var transport = new transports[name]({\r\n\t    query: query,\r\n\t    socket: this,\r\n\t    agent: options.agent || this.agent,\r\n\t    hostname: options.hostname || this.hostname,\r\n\t    port: options.port || this.port,\r\n\t    secure: options.secure || this.secure,\r\n\t    path: options.path || this.path,\r\n\t    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n\t    jsonp: options.jsonp || this.jsonp,\r\n\t    forceBase64: options.forceBase64 || this.forceBase64,\r\n\t    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n\t    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n\t    timestampParam: options.timestampParam || this.timestampParam,\r\n\t    policyPort: options.policyPort || this.policyPort,\r\n\t    pfx: options.pfx || this.pfx,\r\n\t    key: options.key || this.key,\r\n\t    passphrase: options.passphrase || this.passphrase,\r\n\t    cert: options.cert || this.cert,\r\n\t    ca: options.ca || this.ca,\r\n\t    ciphers: options.ciphers || this.ciphers,\r\n\t    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n\t    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n\t    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n\t    forceNode: options.forceNode || this.forceNode,\r\n\t    localAddress: options.localAddress || this.localAddress,\r\n\t    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n\t    protocols: options.protocols || void (0),\r\n\t    isReactNative: this.isReactNative\r\n\t  });\r\n\t\r\n\t  return transport;\r\n\t};\r\n\t\r\n\tfunction clone (obj) {\r\n\t  var o = {};\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      o[i] = obj[i];\r\n\t    }\r\n\t  }\r\n\t  return o;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initializes transport to use and starts probe.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\tSocket.prototype.open = function () {\r\n\t  var transport;\r\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n\t    transport = 'websocket';\r\n\t  } else if (0 === this.transports.length) {\r\n\t    // Emit error on next tick so it can be listened to\r\n\t    var self = this;\r\n\t    setTimeout(function () {\r\n\t      self.emit('error', 'No transports available');\r\n\t    }, 0);\r\n\t    return;\r\n\t  } else {\r\n\t    transport = this.transports[0];\r\n\t  }\r\n\t  this.readyState = 'opening';\r\n\t\r\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n\t  try {\r\n\t    transport = this.createTransport(transport);\r\n\t  } catch (e) {\r\n\t    this.transports.shift();\r\n\t    this.open();\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  transport.open();\r\n\t  this.setTransport(transport);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sets the current transport. Disables the existing one (if any).\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.setTransport = function (transport) {\r\n\t\r\n\t  var self = this;\r\n\t\r\n\t  if (this.transport) {\r\n\t\r\n\t    this.transport.removeAllListeners();\r\n\t  }\r\n\t\r\n\t  // set up transport\r\n\t  this.transport = transport;\r\n\t\r\n\t  // set up transport listeners\r\n\t  transport\r\n\t  .on('outOfBand', function (data) {\r\n\t    self.onOutOfBand(data);\r\n\t  })\r\n\t  .on('drain', function () {\r\n\t    self.onDrain();\r\n\t  })\r\n\t  .on('packet', function (packet) {\r\n\t    self.onPacket(packet);\r\n\t  })\r\n\t  .on('error', function (e) {\r\n\t    self.onError(e);\r\n\t  })\r\n\t  .on('close', function () {\r\n\t    self.onClose('transport close');\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Probes a transport.\r\n\t *\r\n\t * @param {String} transport name\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.probe = function (name) {\r\n\t\r\n\t  var transport = this.createTransport(name, { probe: 1 });\r\n\t  var failed = false;\r\n\t  var self = this;\r\n\t\r\n\t  Socket.priorWebsocketSuccess = false;\r\n\t\r\n\t  function onTransportOpen () {\r\n\t    if (self.onlyBinaryUpgrades) {\r\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n\t      failed = failed || upgradeLosesBinary;\r\n\t    }\r\n\t    if (failed) return;\r\n\t\r\n\t\r\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\r\n\t    transport.once('packet', function (msg) {\r\n\t      if (failed) return;\r\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\r\n\t\r\n\t        self.upgrading = true;\r\n\t        self.emit('upgrading', transport);\r\n\t        if (!transport) return;\r\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\t\r\n\t\r\n\t        self.transport.pause(function () {\r\n\t          if (failed) return;\r\n\t          if ('closed' === self.readyState) return;\r\n\t\r\n\t\r\n\t          cleanup();\r\n\t\r\n\t          self.setTransport(transport);\r\n\t          transport.send([{ type: 'upgrade' }]);\r\n\t          self.emit('upgrade', transport);\r\n\t          transport = null;\r\n\t          self.upgrading = false;\r\n\t          self.flush();\r\n\t        });\r\n\t      } else {\r\n\t\r\n\t        var err = new Error('probe error');\r\n\t        err.transport = transport.name;\r\n\t        self.emit('upgradeError', err);\r\n\t      }\r\n\t    });\r\n\t  }\r\n\t\r\n\t  function freezeTransport () {\r\n\t    if (failed) return;\r\n\t\r\n\t    // Any callback called by transport should be ignored since now\r\n\t    failed = true;\r\n\t\r\n\t    cleanup();\r\n\t\r\n\t    transport.close();\r\n\t    transport = null;\r\n\t  }\r\n\t\r\n\t  // Handle any error that happens while probing\r\n\t  function onerror (err) {\r\n\t    var error = new Error('probe error: ' + err);\r\n\t    error.transport = transport.name;\r\n\t\r\n\t    freezeTransport();\r\n\t\r\n\t\r\n\t\r\n\t    self.emit('upgradeError', error);\r\n\t  }\r\n\t\r\n\t  function onTransportClose () {\r\n\t    onerror('transport closed');\r\n\t  }\r\n\t\r\n\t  // When the socket is closed while we're probing\r\n\t  function onclose () {\r\n\t    onerror('socket closed');\r\n\t  }\r\n\t\r\n\t  // When the socket is upgraded while we're probing\r\n\t  function onupgrade (to) {\r\n\t    if (transport && to.name !== transport.name) {\r\n\t\r\n\t      freezeTransport();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Remove all listeners on the transport and on self\r\n\t  function cleanup () {\r\n\t    transport.removeListener('open', onTransportOpen);\r\n\t    transport.removeListener('error', onerror);\r\n\t    transport.removeListener('close', onTransportClose);\r\n\t    self.removeListener('close', onclose);\r\n\t    self.removeListener('upgrading', onupgrade);\r\n\t  }\r\n\t\r\n\t  transport.once('open', onTransportOpen);\r\n\t  transport.once('error', onerror);\r\n\t  transport.once('close', onTransportClose);\r\n\t\r\n\t  this.once('close', onclose);\r\n\t  this.once('upgrading', onupgrade);\r\n\t\r\n\t  transport.open();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called when connection is deemed open.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.prototype.onOpen = function () {\r\n\t\r\n\t  this.readyState = 'open';\r\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n\t  this.emit('open');\r\n\t  this.flush();\r\n\t\r\n\t  // we check for `readyState` in case an `open`\r\n\t  // listener already closed the socket\r\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n\t\r\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n\t      this.probe(this.upgrades[i]);\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Handles a packet.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onPacket = function (packet) {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n\t      'closing' === this.readyState) {\r\n\t\r\n\t\r\n\t    this.emit('packet', packet);\r\n\t\r\n\t    // Socket is live - any packet counts\r\n\t    this.emit('heartbeat');\r\n\t\r\n\t    switch (packet.type) {\r\n\t      case 'open':\r\n\t        this.onHandshake(JSON.parse(packet.data));\r\n\t        break;\r\n\t\r\n\t      case 'pong':\r\n\t        this.setPing();\r\n\t        this.emit('pong');\r\n\t        break;\r\n\t\r\n\t      case 'error':\r\n\t        var err = new Error('server error');\r\n\t        err.code = packet.data;\r\n\t        this.onError(err);\r\n\t        break;\r\n\t\r\n\t      case 'message':\r\n\t        this.emit('data', packet.data);\r\n\t        this.emit('message', packet.data);\r\n\t        break;\r\n\t    }\r\n\t  } else {\r\n\t\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon handshake completion.\r\n\t *\r\n\t * @param {Object} handshake obj\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onHandshake = function (data) {\r\n\t  this.emit('handshake', data);\r\n\t  this.id = data.sid;\r\n\t  this.transport.query.sid = data.sid;\r\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\r\n\t  this.pingInterval = data.pingInterval;\r\n\t  this.pingTimeout = data.pingTimeout;\r\n\t  this.onOpen();\r\n\t  // In case open handler closes socket\r\n\t  if ('closed' === this.readyState) return;\r\n\t  this.setPing();\r\n\t\r\n\t  // Prolong liveness of socket on heartbeat\r\n\t  this.removeListener('heartbeat', this.onHeartbeat);\r\n\t  this.on('heartbeat', this.onHeartbeat);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Resets ping timeout.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onHeartbeat = function (timeout) {\r\n\t  clearTimeout(this.pingTimeoutTimer);\r\n\t  var self = this;\r\n\t  self.pingTimeoutTimer = setTimeout(function () {\r\n\t    if ('closed' === self.readyState) return;\r\n\t    self.onClose('ping timeout');\r\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\r\n\t};\r\n\t\r\n\t/**\r\n\t * Pings server every `this.pingInterval` and expects response\r\n\t * within `this.pingTimeout` or closes connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.setPing = function () {\r\n\t  var self = this;\r\n\t  clearTimeout(self.pingIntervalTimer);\r\n\t  self.pingIntervalTimer = setTimeout(function () {\r\n\t\r\n\t    self.ping();\r\n\t    self.onHeartbeat(self.pingTimeout);\r\n\t  }, self.pingInterval);\r\n\t};\r\n\t\r\n\t/**\r\n\t* Sends a ping packet.\r\n\t*\r\n\t* @api private\r\n\t*/\r\n\t\r\n\tSocket.prototype.ping = function () {\r\n\t  var self = this;\r\n\t  this.sendPacket('ping', function () {\r\n\t    self.emit('ping');\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called on `outOfBand` event\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onOutOfBand = function (data) {\r\n\t  this.outOfBand(data);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called on `drain` event\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onDrain = function () {\r\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\t\r\n\t  // setting prevBufferLen = 0 is very important\r\n\t  // for example, when upgrading, upgrade packet is sent over,\r\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\r\n\t  this.prevBufferLen = 0;\r\n\t\r\n\t  if (0 === this.writeBuffer.length) {\r\n\t    this.emit('drain');\r\n\t  } else {\r\n\t    this.flush();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Flush write buffers.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.flush = function () {\r\n\t  if ('closed' !== this.readyState && this.transport.writable &&\r\n\t    !this.upgrading && this.writeBuffer.length) {\r\n\t\r\n\t    this.transport.send(this.writeBuffer);\r\n\t    // keep track of current length of writeBuffer\r\n\t    // splice writeBuffer and callbackBuffer on `drain`\r\n\t    this.prevBufferLen = this.writeBuffer.length;\r\n\t    this.emit('flush');\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends a message.\r\n\t *\r\n\t * @param {String} message.\r\n\t * @param {Function} callback function.\r\n\t * @param {Object} options.\r\n\t * @return {Socket} for chaining.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tSocket.prototype.write =\r\n\tSocket.prototype.send = function (msg, options, fn) {\r\n\t  this.sendPacket('message', msg, options, fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends a packet.\r\n\t *\r\n\t * @param {String} packet type.\r\n\t * @param {String} data.\r\n\t * @param {Object} options.\r\n\t * @param {Function} callback function.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n\t  if ('function' === typeof data) {\r\n\t    fn = data;\r\n\t    data = undefined;\r\n\t  }\r\n\t\r\n\t  if ('function' === typeof options) {\r\n\t    fn = options;\r\n\t    options = null;\r\n\t  }\r\n\t\r\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  options = options || {};\r\n\t  options.compress = false !== options.compress;\r\n\t\r\n\t  var packet = {\r\n\t    type: type,\r\n\t    data: data,\r\n\t    options: options\r\n\t  };\r\n\t  this.emit('packetCreate', packet);\r\n\t  this.writeBuffer.push(packet);\r\n\t  if (fn) this.once('flush', fn);\r\n\t  this.flush();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes the connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.close = function () {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n\t    this.readyState = 'closing';\r\n\t\r\n\t    var self = this;\r\n\t\r\n\t    if (this.writeBuffer.length) {\r\n\t      this.once('drain', function () {\r\n\t        if (this.upgrading) {\r\n\t          waitForUpgrade();\r\n\t        } else {\r\n\t          close();\r\n\t        }\r\n\t      });\r\n\t    } else if (this.upgrading) {\r\n\t      waitForUpgrade();\r\n\t    } else {\r\n\t      close();\r\n\t    }\r\n\t  }\r\n\t\r\n\t  function close () {\r\n\t    self.onClose('forced close');\r\n\t\r\n\t    self.transport.close();\r\n\t  }\r\n\t\r\n\t  function cleanupAndClose () {\r\n\t    self.removeListener('upgrade', cleanupAndClose);\r\n\t    self.removeListener('upgradeError', cleanupAndClose);\r\n\t    close();\r\n\t  }\r\n\t\r\n\t  function waitForUpgrade () {\r\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n\t    self.once('upgrade', cleanupAndClose);\r\n\t    self.once('upgradeError', cleanupAndClose);\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon transport error\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onError = function (err) {\r\n\t\r\n\t  Socket.priorWebsocketSuccess = false;\r\n\t  this.emit('error', err);\r\n\t  this.onClose('transport error', err);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon transport close.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tSocket.prototype.onClose = function (reason, desc) {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n\t\r\n\t    var self = this;\r\n\t\r\n\t    // clear timers\r\n\t    clearTimeout(this.pingIntervalTimer);\r\n\t    clearTimeout(this.pingTimeoutTimer);\r\n\t\r\n\t    // stop event from firing again for transport\r\n\t    this.transport.removeAllListeners('close');\r\n\t\r\n\t    // ensure transport won't stay open\r\n\t    this.transport.close();\r\n\t\r\n\t    // ignore further transport communication\r\n\t    this.transport.removeAllListeners();\r\n\t\r\n\t    // set ready state\r\n\t    this.readyState = 'closed';\r\n\t\r\n\t    // clear session id\r\n\t    this.id = null;\r\n\t\r\n\t    // emit close event\r\n\t    this.emit('close', reason, desc);\r\n\t\r\n\t    // clean buffers after, so users can still\r\n\t    // grab the buffers on `close` event\r\n\t    self.writeBuffer = [];\r\n\t    self.prevBufferLen = 0;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Filters upgrades, returning only those matching client transports.\r\n\t *\r\n\t * @param {Array} server upgrades\r\n\t * @api private\r\n\t *\r\n\t */\r\n\t\r\n\tSocket.prototype.filterUpgrades = function (upgrades) {\r\n\t  var filteredUpgrades = [];\r\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n\t  }\r\n\t  return filteredUpgrades;\r\n\t};\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies\r\n\t */\r\n\t\r\n\tvar XMLHttpRequest = __webpack_require__(13);\r\n\tvar XHR = __webpack_require__(15);\r\n\tvar JSONP = __webpack_require__(29);\r\n\tvar websocket = __webpack_require__(30);\r\n\t\r\n\t/**\r\n\t * Export transports.\r\n\t */\r\n\t\r\n\texports.polling = polling;\r\n\texports.websocket = websocket;\r\n\t\r\n\t/**\r\n\t * Polling transport polymorphic constructor.\r\n\t * Decides on xhr vs jsonp based on feature detection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction polling (opts) {\r\n\t  var xhr;\r\n\t  var xd = false;\r\n\t  var xs = false;\r\n\t  var jsonp = false !== opts.jsonp;\r\n\t\r\n\t  if (typeof location !== 'undefined') {\r\n\t    var isSSL = 'https:' === location.protocol;\r\n\t    var port = location.port;\r\n\t\r\n\t    // some user agents have empty `location.port`\r\n\t    if (!port) {\r\n\t      port = isSSL ? 443 : 80;\r\n\t    }\r\n\t\r\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n\t    xs = opts.secure !== isSSL;\r\n\t  }\r\n\t\r\n\t  opts.xdomain = xd;\r\n\t  opts.xscheme = xs;\r\n\t  xhr = new XMLHttpRequest(opts);\r\n\t\r\n\t  if ('open' in xhr && !opts.forceJSONP) {\r\n\t    return new XHR(opts);\r\n\t  } else {\r\n\t    if (!jsonp) throw new Error('JSONP disabled');\r\n\t    return new JSONP(opts);\r\n\t  }\r\n\t}\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// browser shim for xmlhttprequest module\r\n\t\r\n\tvar hasCORS = __webpack_require__(14);\r\n\t\r\n\tmodule.exports = function (opts) {\r\n\t  var xdomain = opts.xdomain;\r\n\t\r\n\t  // scheme must be same when usign XDomainRequest\r\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n\t  var xscheme = opts.xscheme;\r\n\t\r\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n\t  // https://github.com/Automattic/engine.io-client/pull/217\r\n\t  var enablesXDR = opts.enablesXDR;\r\n\t\r\n\t  // XMLHttpRequest can be disabled on IE\r\n\t  try {\r\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n\t      return new XMLHttpRequest();\r\n\t    }\r\n\t  } catch (e) { }\r\n\t\r\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\r\n\t  // because loading bar keeps flashing when using jsonp-polling\r\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n\t  try {\r\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n\t      return new XDomainRequest();\r\n\t    }\r\n\t  } catch (e) { }\r\n\t\r\n\t  if (!xdomain) {\r\n\t    try {\r\n\t      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n\t    } catch (e) { }\r\n\t  }\r\n\t};\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global attachEvent */\r\n\t\r\n\t/**\r\n\t * Module requirements.\r\n\t */\r\n\t\r\n\tvar XMLHttpRequest = __webpack_require__(13);\r\n\tvar Polling = __webpack_require__(16);\r\n\tvar Emitter = __webpack_require__(5);\r\n\tvar inherit = __webpack_require__(27);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:polling-xhr');\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = XHR;\r\n\tmodule.exports.Request = Request;\r\n\t\r\n\t/**\r\n\t * Empty function\r\n\t */\r\n\t\r\n\tfunction empty () {}\r\n\t\r\n\t/**\r\n\t * XHR Polling constructor.\r\n\t *\r\n\t * @param {Object} opts\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction XHR (opts) {\r\n\t  Polling.call(this, opts);\r\n\t  this.requestTimeout = opts.requestTimeout;\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t\r\n\t  if (typeof location !== 'undefined') {\r\n\t    var isSSL = 'https:' === location.protocol;\r\n\t    var port = location.port;\r\n\t\r\n\t    // some user agents have empty `location.port`\r\n\t    if (!port) {\r\n\t      port = isSSL ? 443 : 80;\r\n\t    }\r\n\t\r\n\t    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\r\n\t      port !== opts.port;\r\n\t    this.xs = opts.secure !== isSSL;\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Polling.\r\n\t */\r\n\t\r\n\tinherit(XHR, Polling);\r\n\t\r\n\t/**\r\n\t * XHR supports binary\r\n\t */\r\n\t\r\n\tXHR.prototype.supportsBinary = true;\r\n\t\r\n\t/**\r\n\t * Creates a request.\r\n\t *\r\n\t * @param {String} method\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.request = function (opts) {\r\n\t  opts = opts || {};\r\n\t  opts.uri = this.uri();\r\n\t  opts.xd = this.xd;\r\n\t  opts.xs = this.xs;\r\n\t  opts.agent = this.agent || false;\r\n\t  opts.supportsBinary = this.supportsBinary;\r\n\t  opts.enablesXDR = this.enablesXDR;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t  opts.requestTimeout = this.requestTimeout;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  opts.extraHeaders = this.extraHeaders;\r\n\t\r\n\t  return new Request(opts);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends data.\r\n\t *\r\n\t * @param {String} data to send.\r\n\t * @param {Function} called upon flush.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.doWrite = function (data, fn) {\r\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\r\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n\t  var self = this;\r\n\t  req.on('data', fn);\r\n\t  req.on('error', function (err) {\r\n\t    self.onError('xhr post error', err);\r\n\t  });\r\n\t  this.sendXhr = req;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts a poll cycle.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tXHR.prototype.doPoll = function () {\r\n\t\r\n\t  var req = this.request();\r\n\t  var self = this;\r\n\t  req.on('data', function (data) {\r\n\t    self.onData(data);\r\n\t  });\r\n\t  req.on('error', function (err) {\r\n\t    self.onError('xhr poll error', err);\r\n\t  });\r\n\t  this.pollXhr = req;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Request constructor\r\n\t *\r\n\t * @param {Object} options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Request (opts) {\r\n\t  this.method = opts.method || 'GET';\r\n\t  this.uri = opts.uri;\r\n\t  this.xd = !!opts.xd;\r\n\t  this.xs = !!opts.xs;\r\n\t  this.async = false !== opts.async;\r\n\t  this.data = undefined !== opts.data ? opts.data : null;\r\n\t  this.agent = opts.agent;\r\n\t  this.isBinary = opts.isBinary;\r\n\t  this.supportsBinary = opts.supportsBinary;\r\n\t  this.enablesXDR = opts.enablesXDR;\r\n\t  this.requestTimeout = opts.requestTimeout;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx;\r\n\t  this.key = opts.key;\r\n\t  this.passphrase = opts.passphrase;\r\n\t  this.cert = opts.cert;\r\n\t  this.ca = opts.ca;\r\n\t  this.ciphers = opts.ciphers;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t\r\n\t  this.create();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Request.prototype);\r\n\t\r\n\t/**\r\n\t * Creates the XHR object and sends the request.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.create = function () {\r\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t\r\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n\t  var self = this;\r\n\t\r\n\t  try {\r\n\t\r\n\t    xhr.open(this.method, this.uri, this.async);\r\n\t    try {\r\n\t      if (this.extraHeaders) {\r\n\t        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n\t        for (var i in this.extraHeaders) {\r\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\r\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t    } catch (e) {}\r\n\t\r\n\t    if ('POST' === this.method) {\r\n\t      try {\r\n\t        if (this.isBinary) {\r\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n\t        } else {\r\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n\t        }\r\n\t      } catch (e) {}\r\n\t    }\r\n\t\r\n\t    try {\r\n\t      xhr.setRequestHeader('Accept', '*/*');\r\n\t    } catch (e) {}\r\n\t\r\n\t    // ie6 check\r\n\t    if ('withCredentials' in xhr) {\r\n\t      xhr.withCredentials = true;\r\n\t    }\r\n\t\r\n\t    if (this.requestTimeout) {\r\n\t      xhr.timeout = this.requestTimeout;\r\n\t    }\r\n\t\r\n\t    if (this.hasXDR()) {\r\n\t      xhr.onload = function () {\r\n\t        self.onLoad();\r\n\t      };\r\n\t      xhr.onerror = function () {\r\n\t        self.onError(xhr.responseText);\r\n\t      };\r\n\t    } else {\r\n\t      xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState === 2) {\r\n\t          try {\r\n\t            var contentType = xhr.getResponseHeader('Content-Type');\r\n\t            if (self.supportsBinary && contentType === 'application/octet-stream') {\r\n\t              xhr.responseType = 'arraybuffer';\r\n\t            }\r\n\t          } catch (e) {}\r\n\t        }\r\n\t        if (4 !== xhr.readyState) return;\r\n\t        if (200 === xhr.status || 1223 === xhr.status) {\r\n\t          self.onLoad();\r\n\t        } else {\r\n\t          // make sure the `error` event handler that's user-set\r\n\t          // does not throw in the same tick and gets caught here\r\n\t          setTimeout(function () {\r\n\t            self.onError(xhr.status);\r\n\t          }, 0);\r\n\t        }\r\n\t      };\r\n\t    }\r\n\t\r\n\t\r\n\t    xhr.send(this.data);\r\n\t  } catch (e) {\r\n\t    // Need to defer since .create() is called directly fhrom the constructor\r\n\t    // and thus the 'error' event can only be only bound *after* this exception\r\n\t    // occurs.  Therefore, also, we cannot throw here at all.\r\n\t    setTimeout(function () {\r\n\t      self.onError(e);\r\n\t    }, 0);\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  if (typeof document !== 'undefined') {\r\n\t    this.index = Request.requestsCount++;\r\n\t    Request.requests[this.index] = this;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon successful response.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onSuccess = function () {\r\n\t  this.emit('success');\r\n\t  this.cleanup();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called if we have data.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onData = function (data) {\r\n\t  this.emit('data', data);\r\n\t  this.onSuccess();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon error.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onError = function (err) {\r\n\t  this.emit('error', err);\r\n\t  this.cleanup(true);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Cleans up house.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.cleanup = function (fromError) {\r\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n\t    return;\r\n\t  }\r\n\t  // xmlhttprequest\r\n\t  if (this.hasXDR()) {\r\n\t    this.xhr.onload = this.xhr.onerror = empty;\r\n\t  } else {\r\n\t    this.xhr.onreadystatechange = empty;\r\n\t  }\r\n\t\r\n\t  if (fromError) {\r\n\t    try {\r\n\t      this.xhr.abort();\r\n\t    } catch (e) {}\r\n\t  }\r\n\t\r\n\t  if (typeof document !== 'undefined') {\r\n\t    delete Request.requests[this.index];\r\n\t  }\r\n\t\r\n\t  this.xhr = null;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon load.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.onLoad = function () {\r\n\t  var data;\r\n\t  try {\r\n\t    var contentType;\r\n\t    try {\r\n\t      contentType = this.xhr.getResponseHeader('Content-Type');\r\n\t    } catch (e) {}\r\n\t    if (contentType === 'application/octet-stream') {\r\n\t      data = this.xhr.response || this.xhr.responseText;\r\n\t    } else {\r\n\t      data = this.xhr.responseText;\r\n\t    }\r\n\t  } catch (e) {\r\n\t    this.onError(e);\r\n\t  }\r\n\t  if (null != data) {\r\n\t    this.onData(data);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if it has XDomainRequest.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tRequest.prototype.hasXDR = function () {\r\n\t  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Aborts the request.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tRequest.prototype.abort = function () {\r\n\t  this.cleanup();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Aborts pending requests when unloading the window. This is needed to prevent\r\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n\t * emitted.\r\n\t */\r\n\t\r\n\tRequest.requestsCount = 0;\r\n\tRequest.requests = {};\r\n\t\r\n\tif (typeof document !== 'undefined') {\r\n\t  if (typeof attachEvent === 'function') {\r\n\t    attachEvent('onunload', unloadHandler);\r\n\t  } else if (typeof addEventListener === 'function') {\r\n\t    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\r\n\t    addEventListener(terminationEvent, unloadHandler, false);\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction unloadHandler () {\r\n\t  for (var i in Request.requests) {\r\n\t    if (Request.requests.hasOwnProperty(i)) {\r\n\t      Request.requests[i].abort();\r\n\t    }\r\n\t  }\r\n\t}\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar Transport = __webpack_require__(17);\r\n\tvar parseqs = __webpack_require__(26);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar inherit = __webpack_require__(27);\r\n\tvar yeast = __webpack_require__(28);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:polling');\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Polling;\r\n\t\r\n\t/**\r\n\t * Is XHR2 supported?\r\n\t */\r\n\t\r\n\tvar hasXHR2 = (function () {\r\n\t  var XMLHttpRequest = __webpack_require__(13);\r\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\r\n\t  return null != xhr.responseType;\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Polling interface.\r\n\t *\r\n\t * @param {Object} opts\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction Polling (opts) {\r\n\t  var forceBase64 = (opts && opts.forceBase64);\r\n\t  if (!hasXHR2 || forceBase64) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t  Transport.call(this, opts);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Transport.\r\n\t */\r\n\t\r\n\tinherit(Polling, Transport);\r\n\t\r\n\t/**\r\n\t * Transport name.\r\n\t */\r\n\t\r\n\tPolling.prototype.name = 'polling';\r\n\t\r\n\t/**\r\n\t * Opens the socket (triggers polling). We write a PING message to determine\r\n\t * when the transport is open.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.doOpen = function () {\r\n\t  this.poll();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Pauses polling.\r\n\t *\r\n\t * @param {Function} callback upon buffers are flushed and transport is paused\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.pause = function (onPause) {\r\n\t  var self = this;\r\n\t\r\n\t  this.readyState = 'pausing';\r\n\t\r\n\t  function pause () {\r\n\t\r\n\t    self.readyState = 'paused';\r\n\t    onPause();\r\n\t  }\r\n\t\r\n\t  if (this.polling || !this.writable) {\r\n\t    var total = 0;\r\n\t\r\n\t    if (this.polling) {\r\n\t\r\n\t      total++;\r\n\t      this.once('pollComplete', function () {\r\n\t\r\n\t        --total || pause();\r\n\t      });\r\n\t    }\r\n\t\r\n\t    if (!this.writable) {\r\n\t\r\n\t      total++;\r\n\t      this.once('drain', function () {\r\n\t\r\n\t        --total || pause();\r\n\t      });\r\n\t    }\r\n\t  } else {\r\n\t    pause();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts polling cycle.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tPolling.prototype.poll = function () {\r\n\t\r\n\t  this.polling = true;\r\n\t  this.doPoll();\r\n\t  this.emit('poll');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Overloads onData to detect payloads.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.onData = function (data) {\r\n\t  var self = this;\r\n\t\r\n\t  var callback = function (packet, index, total) {\r\n\t    // if its the first message we consider the transport open\r\n\t    if ('opening' === self.readyState) {\r\n\t      self.onOpen();\r\n\t    }\r\n\t\r\n\t    // if its a close packet, we close the ongoing requests\r\n\t    if ('close' === packet.type) {\r\n\t      self.onClose();\r\n\t      return false;\r\n\t    }\r\n\t\r\n\t    // otherwise bypass onData and handle the message\r\n\t    self.onPacket(packet);\r\n\t  };\r\n\t\r\n\t  // decode payload\r\n\t  self.decodePayload(data, this.socket.binaryType, callback);\r\n\t\r\n\t  // if an event did not trigger closing\r\n\t  if ('closed' !== this.readyState) {\r\n\t    // if we got data we're not polling\r\n\t    this.polling = false;\r\n\t    this.emit('pollComplete');\r\n\t\r\n\t    if ('open' === this.readyState) {\r\n\t      this.poll();\r\n\t    } else {\r\n\t\r\n\t    }\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * For polling, send a close packet.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.doClose = function () {\r\n\t  var self = this;\r\n\t\r\n\t  function close () {\r\n\t\r\n\t    self.write([{ type: 'close' }]);\r\n\t  }\r\n\t\r\n\t  if ('open' === this.readyState) {\r\n\t\r\n\t    close();\r\n\t  } else {\r\n\t    // in case we're trying to close while\r\n\t    // handshaking is in progress (GH-164)\r\n\t\r\n\t    this.once('open', close);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Removes out of band data and decodes the clean payload.\r\n\t *\r\n\t * @param {Array} data packets\r\n\t * @param {Object} typ type\r\n\t * @param {Function} callback parser callback\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.decodePayload = function (data, binaryType, callback) {\r\n\t  var self = this;\r\n\t  var cleanData = '';\r\n\t  var outOfBand = '';\r\n\t  var matchPos = [];\r\n\t  if (typeof data === 'string') {\r\n\t    data = data.substring(data.startsWith('ok') ? 2 : 0);\r\n\t    // find packets\r\n\t    var pos = data.indexOf(':');\r\n\t    while (pos !== -1) {\r\n\t      if ((pos > 0) && (pos < (data.length - 1))\r\n\t          && (data[pos-1] >= '0') && (data[pos-1] <= '9')\r\n\t          && (data[pos+1] >= '0') && (data[pos+1] <= '9')) {\r\n\t        matchPos.push(pos);\r\n\t      }\r\n\t      pos = data.indexOf(':', pos + 1);\r\n\t    }\r\n\t    // separate packets from out of band data\r\n\t    var prev = 0;\r\n\t    var start = 0;\r\n\t    var end = 0;\r\n\t    var del = 0;\r\n\t    var len = 0;\r\n\t    var heur = 0;\r\n\t    for (var m=0; m < matchPos.length; ++m) {\r\n\t      start = matchPos[m] - del - 1;\r\n\t      end = start + 1;\r\n\t      while ((start >= 0) && (data[start] >= '0') && (data[start] <= '9')) {\r\n\t        len = parseInt(data.substring(start, end));\r\n\t        // heuristic to ignore extra outOfBand digit\r\n\t        heur = data.length;\r\n\t        if ((m + 1) < matchPos.length) {\r\n\t          heur = matchPos[m+1] - del - 1;\r\n\t        }\r\n\t        if ((end + len) >= heur) {\r\n\t          break;\r\n\t        }\r\n\t        --start;\r\n\t      }\r\n\t      ++start;\r\n\t      if ((start >= 2) && (data.substring(start - 2, start) === 'ok')) {\r\n\t        data = data.substring(0, start - 2) + data.substring(start);\r\n\t        del += 2;\r\n\t        start -= 2;\r\n\t      }\r\n\t      end = matchPos[m] - del;\r\n\t      len = parseInt(data.substring(start, end));\r\n\t      cleanData += data.substring(start, end+len+1);\r\n\t      outOfBand += data.substring(prev, start);\r\n\t      prev = end+len+1;\r\n\t    }\r\n\t    if (prev < data.length) {\r\n\t      outOfBand += data.substring(prev);\r\n\t    }\r\n\t    // decode packets\r\n\t    if (cleanData) {\r\n\t      parser.decodePayload(cleanData, binaryType, callback);\r\n\t    }\r\n\t    if (outOfBand) {\r\n\t      self.outOfBand(outOfBand);\r\n\t    }\r\n\t  } else if (data) {\r\n\t    parser.decodePayload(data, binaryType, callback);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes a packets payload.\r\n\t *\r\n\t * @param {Array} data packets\r\n\t * @param {Function} drain callback\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.write = function (packets) {\r\n\t  var self = this;\r\n\t  this.writable = false;\r\n\t  var callback = function (packet, index, total) {\r\n\t    // handle the message\r\n\t    self.onPacket(packet);\r\n\t  };\r\n\t  var callbackfn = function (data) {\r\n\t    self.decodePayload(data, self.socket.binaryType, callback);\r\n\t    self.writable = true;\r\n\t    self.emit('drain');\r\n\t  };\r\n\t\r\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n\t    self.doWrite(data, callbackfn);\r\n\t  });\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates uri for connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tPolling.prototype.uri = function () {\r\n\t  var query = this.query || {};\r\n\t  var schema = this.secure ? 'https' : 'http';\r\n\t  var port = '';\r\n\t  var path = (typeof this.path === 'function') ? this.path() : this.path;\r\n\t\r\n\t  // cache busting is forced\r\n\t  if (false !== this.timestampRequests) {\r\n\t    query[this.timestampParam] = yeast();\r\n\t  }\r\n\t\r\n\t  if (!this.supportsBinary && !query.sid) {\r\n\t    query.b64 = 1;\r\n\t  }\r\n\t\r\n\t  query = parseqs.encode(query);\r\n\t\r\n\t  // avoid port if default for schema\r\n\t  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n\t     ('http' === schema && Number(this.port) !== 80))) {\r\n\t    port = ':' + this.port;\r\n\t  }\r\n\t\r\n\t  // prepend ? to query\r\n\t  if (query.length) {\r\n\t    query = '?' + query;\r\n\t  }\r\n\t\r\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\r\n\t};\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar parser = __webpack_require__(18);\r\n\tvar Emitter = __webpack_require__(5);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = Transport;\r\n\t\r\n\t/**\r\n\t * Transport abstract constructor.\r\n\t *\r\n\t * @param {Object} options.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction Transport (opts) {\r\n\t  this.path = opts.path;\r\n\t  this.hostname = opts.hostname;\r\n\t  this.port = opts.port;\r\n\t  this.secure = opts.secure;\r\n\t  this.query = opts.query;\r\n\t  this.timestampParam = opts.timestampParam;\r\n\t  this.timestampRequests = opts.timestampRequests;\r\n\t  this.readyState = '';\r\n\t  this.agent = opts.agent || false;\r\n\t  this.socket = opts.socket;\r\n\t  this.enablesXDR = opts.enablesXDR;\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  this.pfx = opts.pfx;\r\n\t  this.key = opts.key;\r\n\t  this.passphrase = opts.passphrase;\r\n\t  this.cert = opts.cert;\r\n\t  this.ca = opts.ca;\r\n\t  this.ciphers = opts.ciphers;\r\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\t  this.forceNode = opts.forceNode;\r\n\t\r\n\t  // results of ReactNative environment detection\r\n\t  this.isReactNative = opts.isReactNative;\r\n\t\r\n\t  // other options for Node.js client\r\n\t  this.extraHeaders = opts.extraHeaders;\r\n\t  this.localAddress = opts.localAddress;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\r\n\t\r\n\tEmitter(Transport.prototype);\r\n\t\r\n\t/**\r\n\t * Emits an error.\r\n\t *\r\n\t * @param {String} str\r\n\t * @return {Transport} for chaining\r\n\t * @api public\r\n\t */\r\n\t\r\n\tTransport.prototype.onError = function (msg, desc) {\r\n\t  var err = new Error(msg);\r\n\t  err.type = 'TransportError';\r\n\t  err.description = desc;\r\n\t  this.emit('error', err);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Opens the transport.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tTransport.prototype.open = function () {\r\n\t  if ('closed' === this.readyState || '' === this.readyState) {\r\n\t    this.readyState = 'opening';\r\n\t    this.doOpen();\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes the transport.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.close = function () {\r\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n\t    this.doClose();\r\n\t    this.onClose();\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Sends multiple packets.\r\n\t *\r\n\t * @param {Array} packets\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.send = function (packets) {\r\n\t  if ('open' === this.readyState) {\r\n\t    this.write(packets);\r\n\t  } else {\r\n\t    throw new Error('Transport not open');\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon open\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onOpen = function () {\r\n\t  this.readyState = 'open';\r\n\t  this.writable = true;\r\n\t  this.emit('open');\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called with data.\r\n\t *\r\n\t * @param {String} data\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onData = function (data) {\r\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n\t  this.onPacket(packet);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called with a decoded packet.\r\n\t */\r\n\t\r\n\tTransport.prototype.onPacket = function (packet) {\r\n\t  this.emit('packet', packet);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called with out of band data.\r\n\t */\r\n\t\r\n\tTransport.prototype.outOfBand = function (data) {\r\n\t  this.emit('outOfBand', data);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon close.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tTransport.prototype.onClose = function () {\r\n\t  this.readyState = 'closed';\r\n\t  this.emit('close');\r\n\t};\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(19);\n\tvar hasBinary = __webpack_require__(20);\n\tvar sliceBuffer = __webpack_require__(21);\n\tvar after = __webpack_require__(22);\n\tvar utf8 = __webpack_require__(23);\n\t\n\tvar base64encoder;\n\tif (typeof ArrayBuffer !== 'undefined') {\n\t  base64encoder = __webpack_require__(24);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(25);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if (typeof utf8encode === 'function') {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data === 'string') {\n\t    if (data.charAt(0) === 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data, { strict: false });\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data !== 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data === '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = '', n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (chr !== ':') {\n\t      length += chr;\n\t      continue;\n\t    }\n\t\n\t    if (length === '' || (length != (n = Number(length)))) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    msg = data.substr(i + 1, n);\n\t\n\t    if (length != msg.length) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    if (msg.length) {\n\t      packet = exports.decodePacket(msg, binaryType, false);\n\t\n\t      if (err.type === packet.type && err.data === packet.data) {\n\t        // parser error in individual packet - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      var ret = callback(packet, i + n, l);\n\t      if (false === ret) return;\n\t    }\n\t\n\t    // advance cursor\n\t    i += n;\n\t    length = '';\n\t  }\n\t\n\t  if (length !== '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] === 255) break;\n\t\n\t      // 310 = char length of Number.MAX_VALUE\n\t      if (msgLength.length > 310) {\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global Blob File */\n\t\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\t\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' ||\n\t                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\n\tvar withNativeFile = typeof File === 'function' ||\n\t                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Supports Buffer, ArrayBuffer, Blob and File.\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary (obj) {\n\t  if (!obj || typeof obj !== 'object') {\n\t    return false;\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      if (hasBinary(obj[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n\t    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n\t    (withNativeBlob && obj instanceof Blob) ||\n\t    (withNativeFile && obj instanceof File)\n\t  ) {\n\t    return true;\n\t  }\n\t\n\t  // see: https://github.com/Automattic/has-binary/pull/4\n\t  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n\t    return hasBinary(obj.toJSON(), true);\n\t  }\n\t\n\t  for (var key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t\n\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\t\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\t\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\t\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\t\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\t\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\t\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\t\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\t\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\t\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\t\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\t\n\tmodule.exports = {\n\t\tversion: '2.1.2',\n\t\tencode: utf8encode,\n\t\tdecode: utf8decode\n\t};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Create a blob builder even when vendor prefixes exist\r\n\t */\r\n\t\r\n\tvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n\t  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n\t  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n\t  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n\t  false;\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor is supported\r\n\t */\r\n\t\r\n\tvar blobSupported = (function() {\r\n\t  try {\r\n\t    var a = new Blob(['hi']);\r\n\t    return a.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor supports ArrayBufferViews\r\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n\t */\r\n\t\r\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n\t  try {\r\n\t    var b = new Blob([new Uint8Array([1,2])]);\r\n\t    return b.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if BlobBuilder is supported\r\n\t */\r\n\t\r\n\tvar blobBuilderSupported = BlobBuilder\r\n\t  && BlobBuilder.prototype.append\r\n\t  && BlobBuilder.prototype.getBlob;\r\n\t\r\n\t/**\r\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n\t * Used by BlobBuilder constructor and old browsers that didn't\r\n\t * support it in the Blob constructor.\r\n\t */\r\n\t\r\n\tfunction mapArrayBufferViews(ary) {\r\n\t  return ary.map(function(chunk) {\r\n\t    if (chunk.buffer instanceof ArrayBuffer) {\r\n\t      var buf = chunk.buffer;\r\n\t\r\n\t      // if this is a subarray, make a copy so we only\r\n\t      // include the subarray region from the underlying buffer\r\n\t      if (chunk.byteLength !== buf.byteLength) {\r\n\t        var copy = new Uint8Array(chunk.byteLength);\r\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n\t        buf = copy.buffer;\r\n\t      }\r\n\t\r\n\t      return buf;\r\n\t    }\r\n\t\r\n\t    return chunk;\r\n\t  });\r\n\t}\r\n\t\r\n\tfunction BlobBuilderConstructor(ary, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  var bb = new BlobBuilder();\r\n\t  mapArrayBufferViews(ary).forEach(function(part) {\r\n\t    bb.append(part);\r\n\t  });\r\n\t\r\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n\t};\r\n\t\r\n\tfunction BlobConstructor(ary, options) {\r\n\t  return new Blob(mapArrayBufferViews(ary), options || {});\r\n\t};\r\n\t\r\n\tif (typeof Blob !== 'undefined') {\r\n\t  BlobBuilderConstructor.prototype = Blob.prototype;\r\n\t  BlobConstructor.prototype = Blob.prototype;\r\n\t}\r\n\t\r\n\tmodule.exports = (function() {\r\n\t  if (blobSupported) {\r\n\t    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n\t  } else if (blobBuilderSupported) {\r\n\t    return BlobBuilderConstructor;\r\n\t  } else {\r\n\t    return undefined;\r\n\t  }\r\n\t})();\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Compiles a querystring\r\n\t * Returns string representation of the object\r\n\t *\r\n\t * @param {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.encode = function (obj) {\r\n\t  var str = '';\r\n\t\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      if (str.length) str += '&';\r\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parses a simple querystring into an object\r\n\t *\r\n\t * @param {String} qs\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.decode = function(qs){\r\n\t  var qry = {};\r\n\t  var pairs = qs.split('&');\r\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\r\n\t    var pair = pairs[i].split('=');\r\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n\t  }\r\n\t  return qry;\r\n\t};\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\r\n\t * Module requirements.\r\n\t */\r\n\t\r\n\tvar Polling = __webpack_require__(16);\r\n\tvar inherit = __webpack_require__(27);\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = JSONPPolling;\r\n\t\r\n\t/**\r\n\t * Cached regular expressions.\r\n\t */\r\n\t\r\n\tvar rNewline = /\\n/g;\r\n\tvar rEscapedNewline = /\\\\n/g;\r\n\t\r\n\t/**\r\n\t * Global JSONP callbacks.\r\n\t */\r\n\t\r\n\tvar callbacks;\r\n\t\r\n\t/**\r\n\t * Noop.\r\n\t */\r\n\t\r\n\tfunction empty () { }\r\n\t\r\n\t/**\r\n\t * Until https://github.com/tc39/proposal-global is shipped.\r\n\t */\r\n\tfunction glob () {\r\n\t  return typeof self !== 'undefined' ? self\r\n\t      : typeof window !== 'undefined' ? window\r\n\t      : typeof global !== 'undefined' ? global : {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * JSONP Polling constructor.\r\n\t *\r\n\t * @param {Object} opts.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction JSONPPolling (opts) {\r\n\t  Polling.call(this, opts);\r\n\t\r\n\t  this.query = this.query || {};\r\n\t\r\n\t  // define global callbacks array if not present\r\n\t  // we do this here (lazily) to avoid unneeded global pollution\r\n\t  if (!callbacks) {\r\n\t    // we need to consider multiple engines in the same page\r\n\t    var global = glob();\r\n\t    callbacks = global.___eio = (global.___eio || []);\r\n\t  }\r\n\t\r\n\t  // callback identifier\r\n\t  this.index = callbacks.length;\r\n\t\r\n\t  // add callback to jsonp global\r\n\t  var self = this;\r\n\t  callbacks.push(function (msg) {\r\n\t    self.onData(msg);\r\n\t  });\r\n\t\r\n\t  // append to query string\r\n\t  this.query.j = this.index;\r\n\t\r\n\t  // prevent spurious errors from being emitted when the window is unloaded\r\n\t  if (typeof addEventListener === 'function') {\r\n\t    addEventListener('beforeunload', function () {\r\n\t      if (self.script) self.script.onerror = empty;\r\n\t    }, false);\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Polling.\r\n\t */\r\n\t\r\n\tinherit(JSONPPolling, Polling);\r\n\t\r\n\t/*\r\n\t * JSONP only supports binary as base64 encoded strings\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.supportsBinary = false;\r\n\t\r\n\t/**\r\n\t * Closes the socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doClose = function () {\r\n\t  if (this.script) {\r\n\t    this.script.parentNode.removeChild(this.script);\r\n\t    this.script = null;\r\n\t  }\r\n\t\r\n\t  if (this.form) {\r\n\t    this.form.parentNode.removeChild(this.form);\r\n\t    this.form = null;\r\n\t    this.iframe = null;\r\n\t  }\r\n\t\r\n\t  Polling.prototype.doClose.call(this);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Starts a poll cycle.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doPoll = function () {\r\n\t  var self = this;\r\n\t  var script = document.createElement('script');\r\n\t\r\n\t  if (this.script) {\r\n\t    this.script.parentNode.removeChild(this.script);\r\n\t    this.script = null;\r\n\t  }\r\n\t\r\n\t  script.async = true;\r\n\t  script.src = this.uri();\r\n\t  script.onerror = function (e) {\r\n\t    self.onError('jsonp poll error', e);\r\n\t  };\r\n\t\r\n\t  var insertAt = document.getElementsByTagName('script')[0];\r\n\t  if (insertAt) {\r\n\t    insertAt.parentNode.insertBefore(script, insertAt);\r\n\t  } else {\r\n\t    (document.head || document.body).appendChild(script);\r\n\t  }\r\n\t  this.script = script;\r\n\t\r\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\t\r\n\t  if (isUAgecko) {\r\n\t    setTimeout(function () {\r\n\t      var iframe = document.createElement('iframe');\r\n\t      document.body.appendChild(iframe);\r\n\t      document.body.removeChild(iframe);\r\n\t    }, 100);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes with a hidden iframe.\r\n\t *\r\n\t * @param {String} data to send\r\n\t * @param {Function} called upon flush.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\r\n\t  var self = this;\r\n\t\r\n\t  if (!this.form) {\r\n\t    var form = document.createElement('form');\r\n\t    var area = document.createElement('textarea');\r\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n\t    var iframe;\r\n\t\r\n\t    form.className = 'socketio';\r\n\t    form.style.position = 'absolute';\r\n\t    form.style.top = '-1000px';\r\n\t    form.style.left = '-1000px';\r\n\t    form.target = id;\r\n\t    form.method = 'POST';\r\n\t    form.setAttribute('accept-charset', 'utf-8');\r\n\t    area.name = 'd';\r\n\t    form.appendChild(area);\r\n\t    document.body.appendChild(form);\r\n\t\r\n\t    this.form = form;\r\n\t    this.area = area;\r\n\t  }\r\n\t\r\n\t  this.form.action = this.uri();\r\n\t\r\n\t  function complete () {\r\n\t    initIframe();\r\n\t    fn();\r\n\t  }\r\n\t\r\n\t  function initIframe () {\r\n\t    if (self.iframe) {\r\n\t      try {\r\n\t        self.form.removeChild(self.iframe);\r\n\t      } catch (e) {\r\n\t        self.onError('jsonp polling iframe removal error', e);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    try {\r\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n\t      iframe = document.createElement(html);\r\n\t    } catch (e) {\r\n\t      iframe = document.createElement('iframe');\r\n\t      iframe.name = self.iframeId;\r\n\t      iframe.src = 'javascript:0';\r\n\t    }\r\n\t\r\n\t    iframe.id = self.iframeId;\r\n\t\r\n\t    self.form.appendChild(iframe);\r\n\t    self.iframe = iframe;\r\n\t  }\r\n\t\r\n\t  initIframe();\r\n\t\r\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n\t  this.area.value = data.replace(rNewline, '\\\\n');\r\n\t\r\n\t  try {\r\n\t    this.form.submit();\r\n\t  } catch (e) {}\r\n\t\r\n\t  if (this.iframe.attachEvent) {\r\n\t    this.iframe.onreadystatechange = function () {\r\n\t      if (self.iframe.readyState === 'complete') {\r\n\t        complete();\r\n\t      }\r\n\t    };\r\n\t  } else {\r\n\t    this.iframe.onload = complete;\r\n\t  }\r\n\t};\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Module dependencies.\r\n\t */\r\n\t\r\n\tvar Transport = __webpack_require__(17);\r\n\tvar parser = __webpack_require__(18);\r\n\tvar parseqs = __webpack_require__(26);\r\n\tvar inherit = __webpack_require__(27);\r\n\tvar yeast = __webpack_require__(28);\r\n\tvar debug = __webpack_require__(3)('engine.io-client:websocket');\r\n\t\r\n\tvar BrowserWebSocket, NodeWebSocket;\r\n\t\r\n\tif (typeof WebSocket !== 'undefined') {\r\n\t  BrowserWebSocket = WebSocket;\r\n\t} else if (typeof self !== 'undefined') {\r\n\t  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\r\n\t} else {\r\n\t  try {\r\n\t    NodeWebSocket = __webpack_require__(31);\r\n\t  } catch (e) { }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get either the `WebSocket` or `MozWebSocket` globals\r\n\t * in the browser or try to resolve WebSocket-compatible\r\n\t * interface exposed by `ws` for Node-like environment.\r\n\t */\r\n\t\r\n\tvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\r\n\t\r\n\t/**\r\n\t * Module exports.\r\n\t */\r\n\t\r\n\tmodule.exports = WS;\r\n\t\r\n\t/**\r\n\t * WebSocket transport constructor.\r\n\t *\r\n\t * @api {Object} connection options\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction WS (opts) {\r\n\t  var forceBase64 = (opts && opts.forceBase64);\r\n\t  if (forceBase64) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t  this.perMessageDeflate = opts.perMessageDeflate;\r\n\t  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n\t  this.protocols = opts.protocols;\r\n\t  if (!this.usingBrowserWebSocket) {\r\n\t    WebSocketImpl = NodeWebSocket;\r\n\t  }\r\n\t  Transport.call(this, opts);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits from Transport.\r\n\t */\r\n\t\r\n\tinherit(WS, Transport);\r\n\t\r\n\t/**\r\n\t * Transport name.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tWS.prototype.name = 'websocket';\r\n\t\r\n\t/*\r\n\t * WebSockets support binary\r\n\t */\r\n\t\r\n\tWS.prototype.supportsBinary = true;\r\n\t\r\n\t/**\r\n\t * Opens socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.doOpen = function () {\r\n\t  if (!this.check()) {\r\n\t    // let probe timeout\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  var uri = this.uri();\r\n\t  var protocols = this.protocols;\r\n\t  var opts = {\r\n\t    agent: this.agent,\r\n\t    perMessageDeflate: this.perMessageDeflate\r\n\t  };\r\n\t\r\n\t  // SSL options for Node.js client\r\n\t  opts.pfx = this.pfx;\r\n\t  opts.key = this.key;\r\n\t  opts.passphrase = this.passphrase;\r\n\t  opts.cert = this.cert;\r\n\t  opts.ca = this.ca;\r\n\t  opts.ciphers = this.ciphers;\r\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\t  if (this.extraHeaders) {\r\n\t    opts.headers = this.extraHeaders;\r\n\t  }\r\n\t  if (this.localAddress) {\r\n\t    opts.localAddress = this.localAddress;\r\n\t  }\r\n\t\r\n\t  try {\r\n\t    this.ws =\r\n\t      this.usingBrowserWebSocket && !this.isReactNative\r\n\t        ? protocols\r\n\t          ? new WebSocketImpl(uri, protocols)\r\n\t          : new WebSocketImpl(uri)\r\n\t        : new WebSocketImpl(uri, protocols, opts);\r\n\t  } catch (err) {\r\n\t    return this.emit('error', err);\r\n\t  }\r\n\t\r\n\t  if (this.ws.binaryType === undefined) {\r\n\t    this.supportsBinary = false;\r\n\t  }\r\n\t\r\n\t  if (this.ws.supports && this.ws.supports.binary) {\r\n\t    this.supportsBinary = true;\r\n\t    this.ws.binaryType = 'nodebuffer';\r\n\t  } else {\r\n\t    this.ws.binaryType = 'arraybuffer';\r\n\t  }\r\n\t\r\n\t  this.addEventListeners();\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds event listeners to the socket\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.addEventListeners = function () {\r\n\t  var self = this;\r\n\t\r\n\t  this.ws.onopen = function () {\r\n\t    self.onOpen();\r\n\t  };\r\n\t  this.ws.onclose = function () {\r\n\t    self.onClose();\r\n\t  };\r\n\t  this.ws.onmessage = function (ev) {\r\n\t    self.onData(ev.data);\r\n\t  };\r\n\t  this.ws.onerror = function (e) {\r\n\t    self.onError('websocket error', e);\r\n\t  };\r\n\t};\r\n\t\r\n\t/**\r\n\t * Writes data to socket.\r\n\t *\r\n\t * @param {Array} array of packets.\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.write = function (packets) {\r\n\t  var self = this;\r\n\t  this.writable = false;\r\n\t\r\n\t  // encodePacket efficient as it uses WS framing\r\n\t  // no need for encodePayload\r\n\t  var total = packets.length;\r\n\t  for (var i = 0, l = total; i < l; i++) {\r\n\t    (function (packet) {\r\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n\t        if (!self.usingBrowserWebSocket) {\r\n\t          // always create a new object (GH-437)\r\n\t          var opts = {};\r\n\t          if (packet.options) {\r\n\t            opts.compress = packet.options.compress;\r\n\t          }\r\n\t\r\n\t          if (self.perMessageDeflate) {\r\n\t            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\r\n\t            if (len < self.perMessageDeflate.threshold) {\r\n\t              opts.compress = false;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // Sometimes the websocket has already been closed but the browser didn't\r\n\t        // have a chance of informing us about it yet, in that case send will\r\n\t        // throw an error\r\n\t        try {\r\n\t          if (self.usingBrowserWebSocket) {\r\n\t            // TypeError is thrown when passing the second argument on Safari\r\n\t            self.ws.send(data);\r\n\t          } else {\r\n\t            self.ws.send(data, opts);\r\n\t          }\r\n\t        } catch (e) {\r\n\t\r\n\t        }\r\n\t\r\n\t        --total || done();\r\n\t      });\r\n\t    })(packets[i]);\r\n\t  }\r\n\t\r\n\t  function done () {\r\n\t    self.emit('flush');\r\n\t\r\n\t    // fake drain\r\n\t    // defer to next tick to allow Socket to clear writeBuffer\r\n\t    setTimeout(function () {\r\n\t      self.writable = true;\r\n\t      self.emit('drain');\r\n\t    }, 0);\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Called upon close\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.onClose = function () {\r\n\t  Transport.prototype.onClose.call(this);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Closes socket.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.doClose = function () {\r\n\t  if (typeof this.ws !== 'undefined') {\r\n\t    this.ws.close();\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Generates uri for connection.\r\n\t *\r\n\t * @api private\r\n\t */\r\n\t\r\n\tWS.prototype.uri = function () {\r\n\t  var query = this.query || {};\r\n\t  var schema = this.secure ? 'wss' : 'ws';\r\n\t  var port = '';\r\n\t  var path = (typeof this.path === 'function') ? this.path() : this.path;\r\n\t\r\n\t  // avoid port if default for schema\r\n\t  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n\t    ('ws' === schema && Number(this.port) !== 80))) {\r\n\t    port = ':' + this.port;\r\n\t  }\r\n\t\r\n\t  // append timestamp to URI\r\n\t  if (this.timestampRequests) {\r\n\t    query[this.timestampParam] = yeast();\r\n\t  }\r\n\t\r\n\t  // communicate binary support capabilities\r\n\t  if (!this.supportsBinary) {\r\n\t    query.b64 = 1;\r\n\t  }\r\n\t\r\n\t  query = parseqs.encode(query);\r\n\t\r\n\t  // prepend ? to query\r\n\t  if (query.length) {\r\n\t    query = '?' + query;\r\n\t  }\r\n\t\r\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Feature detection for WebSocket.\r\n\t *\r\n\t * @return {Boolean} whether this transport is available.\r\n\t * @api public\r\n\t */\r\n\t\r\n\tWS.prototype.check = function () {\r\n\t  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\r\n\t};\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\r\n\t * Module dependencies.\r\n\t */\n\t\n\tvar parser = __webpack_require__(4);\n\tvar Emitter = __webpack_require__(5);\n\tvar toArray = __webpack_require__(34);\n\tvar on = __webpack_require__(35);\n\tvar bind = __webpack_require__(36);\n\tvar debug = __webpack_require__(3)('socket.io-client:socket');\n\tvar parseqs = __webpack_require__(26);\n\tvar hasBin = __webpack_require__(20);\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\r\n\t * Internal events (blacklisted).\r\n\t * These events can't be emitted by the user.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\r\n\t * Shortcut to `Emitter#emit`.\r\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\r\n\t * `Socket` constructor.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tfunction Socket(io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  this.flags = {};\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\r\n\t * Mix in `Emitter`.\r\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\r\n\t * Subscribe to open, close and packet events\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n\t};\n\t\n\t/**\r\n\t * \"Opens\" the socket.\r\n\t *\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.open = Socket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sends a `message` event.\r\n\t *\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Override `emit`.\r\n\t * If the event is in `events`, it's emitted normally.\r\n\t *\r\n\t * @param {String} event name\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var packet = {\n\t    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n\t    data: args\n\t  };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  this.flags = {};\n\t\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sends a packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\r\n\t * Called upon engine `open`.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;\n\t\n\t      this.packet({ type: parser.CONNECT, query: query });\n\t    } else {\n\t      this.packet({ type: parser.CONNECT });\n\t    }\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon engine `close`.\r\n\t *\r\n\t * @param {String} reason\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\r\n\t * Called with socket packet.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  var sameNamespace = packet.nsp === this.nsp;\n\t  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\t\n\t  if (!sameNamespace && !rootNamespaceError) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\r\n\t * Called upon a server event.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t\n\t  if (null != packet.id) {\n\t\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\r\n\t * Produces an ack callback to emit with an event.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t\n\t    self.packet({\n\t      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\r\n\t * Called upon a server acknowlegement.\r\n\t *\r\n\t * @param {Object} packet\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {}\n\t};\n\t\n\t/**\r\n\t * Called upon server connect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\r\n\t * Emit buffered events (received and emitted).\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\r\n\t * Called upon server disconnect.\r\n\t *\r\n\t * @api private\r\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\r\n\t * Called upon forced client/server side disconnections,\r\n\t * this method ensures the manager stops tracking us and\r\n\t * that reconnections don't get triggered for this.\r\n\t *\r\n\t * @api private.\r\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\r\n\t * Disconnects the socket manually.\r\n\t *\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.close = Socket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the compress flag.\r\n\t *\r\n\t * @param {Boolean} if `true`, compresses the sending data\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\t\n\t/**\r\n\t * Sets the binary flag\r\n\t *\r\n\t * @param {Boolean} whether the emitted data contains binary\r\n\t * @return {Socket} self\r\n\t * @api public\r\n\t */\n\t\n\tSocket.prototype.binary = function (binary) {\n\t  this.flags.binary = binary;\n\t  return this;\n\t};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\r\n\t * Module exports.\r\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\r\n\t * Helper for subscriptions.\r\n\t *\r\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n\t * @param {String} event name\r\n\t * @param {Function} callback\r\n\t * @api public\r\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function destroy() {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// socket.io.slim.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0e52f082b1f04d992e07","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar url = require('./url');\r\nvar parser = require('socket.io-parser');\r\nvar Manager = require('./manager');\r\nvar debug = require('debug')('socket.io-client');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = lookup;\r\n\r\n/**\r\n * Managers cache.\r\n */\r\n\r\nvar cache = exports.managers = {};\r\n\r\n/**\r\n * Looks up an existing `Manager` for multiplexing.\r\n * If the user summons:\r\n *\r\n *   `io('http://localhost/a');`\r\n *   `io('http://localhost/b');`\r\n *\r\n * We reuse the existing instance based on same scheme/port/host,\r\n * and we initialize sockets for each namespace.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction lookup (uri, opts) {\r\n  if (typeof uri === 'object') {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n\r\n  opts = opts || {};\r\n\r\n  var parsed = url(uri);\r\n  var source = parsed.source;\r\n  var id = parsed.id;\r\n  var path = parsed.path;\r\n  var sameNamespace = cache[id] && path in cache[id].nsps;\r\n  var newConnection = opts.forceNew || opts['force new connection'] ||\r\n                      false === opts.multiplex || sameNamespace;\r\n\r\n  var io;\r\n\r\n  if (newConnection) {\r\n\r\n    io = Manager(source, opts);\r\n  } else {\r\n    if (!cache[id]) {\r\n\r\n      cache[id] = Manager(source, opts);\r\n    }\r\n    io = cache[id];\r\n  }\r\n  if (parsed.query && !opts.query) {\r\n    opts.query = parsed.query;\r\n  }\r\n  return io.socket(parsed.path, opts);\r\n}\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.protocol = parser.protocol;\r\n\r\n/**\r\n * `connect`.\r\n *\r\n * @param {String} uri\r\n * @api public\r\n */\r\n\r\nexports.connect = lookup;\r\n\r\n/**\r\n * Expose constructors for standalone build.\r\n *\r\n * @api public\r\n */\r\n\r\nexports.Manager = require('./manager');\r\nexports.Socket = require('./socket');\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = require('parseuri');\r\nvar debug = require('debug')('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || (typeof location !== 'undefined' && location);\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/url.js","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 2\n// module chunks = 0","\r\nmodule.exports = function () { return function () {}; };\r\n\n\n\n// WEBPACK FOOTER //\n// ./support/noop.js","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/index.js\n// module id = 4\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 5\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/binary.js\n// module id = 6\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 7\n// module chunks = 0","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/is-buffer.js\n// module id = 8\n// module chunks = 0","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar eio = require('engine.io-client');\r\nvar Socket = require('./socket');\r\nvar Emitter = require('component-emitter');\r\nvar parser = require('socket.io-parser');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:manager');\r\nvar indexOf = require('indexof');\r\nvar Backoff = require('backo2');\r\n\r\n/**\r\n * IE6+ hasOwnProperty\r\n */\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Module exports\r\n */\r\n\r\nmodule.exports = Manager;\r\n\r\n/**\r\n * `Manager` constructor.\r\n *\r\n * @param {String} engine instance or engine uri/opts\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Manager (uri, opts) {\r\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\r\n  if (uri && ('object' === typeof uri)) {\r\n    opts = uri;\r\n    uri = undefined;\r\n  }\r\n  opts = opts || {};\r\n\r\n  opts.path = opts.path || '/socket.io';\r\n  this.nsps = {};\r\n  this.subs = [];\r\n  this.opts = opts;\r\n  this.reconnection(opts.reconnection !== false);\r\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\r\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\r\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\r\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\r\n  this.backoff = new Backoff({\r\n    min: this.reconnectionDelay(),\r\n    max: this.reconnectionDelayMax(),\r\n    jitter: this.randomizationFactor()\r\n  });\r\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\r\n  this.readyState = 'closed';\r\n  this.uri = uri;\r\n  this.connecting = [];\r\n  this.lastPing = null;\r\n  this.encoding = false;\r\n  this.packetBuffer = [];\r\n  var _parser = opts.parser || parser;\r\n  this.encoder = new _parser.Encoder();\r\n  this.decoder = new _parser.Decoder();\r\n  this.autoConnect = opts.autoConnect !== false;\r\n  if (this.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Propagate given event to sockets and emit on `this`\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.emitAll = function () {\r\n  this.emit.apply(this, arguments);\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Update `socket.id` of all sockets\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.updateSocketIds = function () {\r\n  for (var nsp in this.nsps) {\r\n    if (has.call(this.nsps, nsp)) {\r\n      this.nsps[nsp].id = this.generateId(nsp);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * generate `socket.id` for the given `nsp`\r\n *\r\n * @param {String} nsp\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nManager.prototype.generateId = function (nsp) {\r\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\r\n};\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Manager.prototype);\r\n\r\n/**\r\n * Sets the `reconnection` config.\r\n *\r\n * @param {Boolean} true/false if it should automatically reconnect\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnection = function (v) {\r\n  if (!arguments.length) return this._reconnection;\r\n  this._reconnection = !!v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the reconnection attempts config.\r\n *\r\n * @param {Number} max reconnection attempts before giving up\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionAttempts = function (v) {\r\n  if (!arguments.length) return this._reconnectionAttempts;\r\n  this._reconnectionAttempts = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelay = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelay;\r\n  this._reconnectionDelay = v;\r\n  this.backoff && this.backoff.setMin(v);\r\n  return this;\r\n};\r\n\r\nManager.prototype.randomizationFactor = function (v) {\r\n  if (!arguments.length) return this._randomizationFactor;\r\n  this._randomizationFactor = v;\r\n  this.backoff && this.backoff.setJitter(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the maximum delay between reconnections.\r\n *\r\n * @param {Number} delay\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.reconnectionDelayMax = function (v) {\r\n  if (!arguments.length) return this._reconnectionDelayMax;\r\n  this._reconnectionDelayMax = v;\r\n  this.backoff && this.backoff.setMax(v);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the connection timeout. `false` to disable\r\n *\r\n * @return {Manager} self or value\r\n * @api public\r\n */\r\n\r\nManager.prototype.timeout = function (v) {\r\n  if (!arguments.length) return this._timeout;\r\n  this._timeout = v;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Starts trying to reconnect if reconnection is enabled and we have not\r\n * started reconnecting yet\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.maybeReconnectOnOpen = function () {\r\n  // Only try to reconnect if it's the first time we're connecting\r\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\r\n    // keeps reconnection from firing twice for the same reconnection loop\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Sets the current transport `socket`.\r\n *\r\n * @param {Function} optional, callback\r\n * @return {Manager} self\r\n * @api public\r\n */\r\n\r\nManager.prototype.open =\r\nManager.prototype.connect = function (fn, opts) {\r\n\r\n  if (~this.readyState.indexOf('open')) return this;\r\n\r\n\r\n  this.engine = eio(this.uri, this.opts);\r\n  var socket = this.engine;\r\n  var self = this;\r\n  this.readyState = 'opening';\r\n  this.skipReconnect = false;\r\n\r\n  // emit `open`\r\n  var openSub = on(socket, 'open', function () {\r\n    self.onopen();\r\n    fn && fn();\r\n  });\r\n\r\n  // emit `connect_error`\r\n  var errorSub = on(socket, 'error', function (data) {\r\n\r\n    self.cleanup();\r\n    self.readyState = 'closed';\r\n    self.emitAll('connect_error', data);\r\n    if (fn) {\r\n      var err = new Error('Connection error');\r\n      err.data = data;\r\n      fn(err);\r\n    } else {\r\n      // Only do this if there is no fn to handle the error\r\n      self.maybeReconnectOnOpen();\r\n    }\r\n  });\r\n\r\n  // emit `connect_timeout`\r\n  if (false !== this._timeout) {\r\n    var timeout = this._timeout;\r\n\r\n\r\n    // set timer\r\n    var timer = setTimeout(function () {\r\n\r\n      openSub.destroy();\r\n      socket.close();\r\n      socket.emit('error', 'timeout');\r\n      self.emitAll('connect_timeout', timeout);\r\n    }, timeout);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n\r\n  this.subs.push(openSub);\r\n  this.subs.push(errorSub);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport open.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onopen = function () {\r\n\r\n\r\n  // clear old subs\r\n  this.cleanup();\r\n\r\n  // mark as open\r\n  this.readyState = 'open';\r\n  this.emit('open');\r\n\r\n  // add new subs\r\n  var socket = this.engine;\r\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\r\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\r\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\r\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\r\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\r\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\r\n};\r\n\r\n/**\r\n * Called upon a ping.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onping = function () {\r\n  this.lastPing = new Date();\r\n  this.emitAll('ping');\r\n};\r\n\r\n/**\r\n * Called upon a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onpong = function () {\r\n  this.emitAll('pong', new Date() - this.lastPing);\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondata = function (data) {\r\n  this.decoder.add(data);\r\n};\r\n\r\n/**\r\n * Called when parser fully decodes a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.ondecoded = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called upon socket error.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onerror = function (err) {\r\n\r\n  this.emitAll('error', err);\r\n};\r\n\r\n/**\r\n * Creates a new socket for the given `nsp`.\r\n *\r\n * @return {Socket}\r\n * @api public\r\n */\r\n\r\nManager.prototype.socket = function (nsp, opts) {\r\n  var socket = this.nsps[nsp];\r\n  if (!socket) {\r\n    socket = new Socket(this, nsp, opts);\r\n    this.nsps[nsp] = socket;\r\n    var self = this;\r\n    socket.on('connecting', onConnecting);\r\n    socket.on('connect', function () {\r\n      socket.id = self.generateId(nsp);\r\n    });\r\n\r\n    if (this.autoConnect) {\r\n      // manually call here since connecting event is fired before listening\r\n      onConnecting();\r\n    }\r\n  }\r\n\r\n  function onConnecting () {\r\n    if (!~indexOf(self.connecting, socket)) {\r\n      self.connecting.push(socket);\r\n    }\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Called upon a socket close.\r\n *\r\n * @param {Socket} socket\r\n */\r\n\r\nManager.prototype.destroy = function (socket) {\r\n  var index = indexOf(this.connecting, socket);\r\n  if (~index) this.connecting.splice(index, 1);\r\n  if (this.connecting.length) return;\r\n\r\n  this.close();\r\n};\r\n\r\n/**\r\n * Writes a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nManager.prototype.packet = function (packet) {\r\n\r\n  var self = this;\r\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\r\n\r\n  if (!self.encoding) {\r\n    // encode, then write to engine with result\r\n    self.encoding = true;\r\n    this.encoder.encode(packet, function (encodedPackets) {\r\n      for (var i = 0; i < encodedPackets.length; i++) {\r\n        self.engine.write(encodedPackets[i], packet.options);\r\n      }\r\n      self.encoding = false;\r\n      self.processPacketQueue();\r\n    });\r\n  } else { // add packet to the queue\r\n    self.packetBuffer.push(packet);\r\n  }\r\n};\r\n\r\n/**\r\n * If packet buffer is non-empty, begins encoding the\r\n * next packet in line.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.processPacketQueue = function () {\r\n  if (this.packetBuffer.length > 0 && !this.encoding) {\r\n    var pack = this.packetBuffer.shift();\r\n    this.packet(pack);\r\n  }\r\n};\r\n\r\n/**\r\n * Clean up transport subscriptions and packet buffer.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.cleanup = function () {\r\n\r\n\r\n  var subsLength = this.subs.length;\r\n  for (var i = 0; i < subsLength; i++) {\r\n    var sub = this.subs.shift();\r\n    sub.destroy();\r\n  }\r\n\r\n  this.packetBuffer = [];\r\n  this.encoding = false;\r\n  this.lastPing = null;\r\n\r\n  this.decoder.destroy();\r\n};\r\n\r\n/**\r\n * Close the current socket.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.close =\r\nManager.prototype.disconnect = function () {\r\n\r\n  this.skipReconnect = true;\r\n  this.reconnecting = false;\r\n  if ('opening' === this.readyState) {\r\n    // `onclose` will not fire because\r\n    // an open event never happened\r\n    this.cleanup();\r\n  }\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  if (this.engine) this.engine.close();\r\n};\r\n\r\n/**\r\n * Called upon engine close.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onclose = function (reason) {\r\n\r\n\r\n  this.cleanup();\r\n  this.backoff.reset();\r\n  this.readyState = 'closed';\r\n  this.emit('close', reason);\r\n\r\n  if (this._reconnection && !this.skipReconnect) {\r\n    this.reconnect();\r\n  }\r\n};\r\n\r\n/**\r\n * Attempt a reconnection.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.reconnect = function () {\r\n  if (this.reconnecting || this.skipReconnect) return this;\r\n\r\n  var self = this;\r\n\r\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\r\n\r\n    this.backoff.reset();\r\n    this.emitAll('reconnect_failed');\r\n    this.reconnecting = false;\r\n  } else {\r\n    var delay = this.backoff.duration();\r\n\r\n\r\n    this.reconnecting = true;\r\n    var timer = setTimeout(function () {\r\n      if (self.skipReconnect) return;\r\n\r\n\r\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\r\n      self.emitAll('reconnecting', self.backoff.attempts);\r\n\r\n      // check again for the case socket closed in above events\r\n      if (self.skipReconnect) return;\r\n\r\n      self.open(function (err) {\r\n        if (err) {\r\n\r\n          self.reconnecting = false;\r\n          self.reconnect();\r\n          self.emitAll('reconnect_error', err.data);\r\n        } else {\r\n\r\n          self.onreconnect();\r\n        }\r\n      });\r\n    }, delay);\r\n\r\n    this.subs.push({\r\n      destroy: function () {\r\n        clearTimeout(timer);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful reconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nManager.prototype.onreconnect = function () {\r\n  var attempt = this.backoff.attempts;\r\n  this.reconnecting = false;\r\n  this.backoff.reset();\r\n  this.updateSocketIds();\r\n  this.emitAll('reconnect', attempt);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/manager.js","\r\nmodule.exports = require('./socket');\r\n\r\n/**\r\n * Exports parser\r\n *\r\n * @api public\r\n *\r\n */\r\nmodule.exports.parser = require('engine.io-parser');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/index.js\n// module id = 10\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar transports = require('./transports/index');\r\nvar Emitter = require('component-emitter');\r\nvar debug = require('debug')('engine.io-client:socket');\r\nvar index = require('indexof');\r\nvar parser = require('engine.io-parser');\r\nvar parseuri = require('parseuri');\r\nvar parseqs = require('parseqs');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Socket;\r\n\r\n/**\r\n * Socket constructor.\r\n *\r\n * @param {String|Object} uri or options\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Socket (uri, opts) {\r\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\r\n\r\n  opts = opts || {};\r\n  this.outOfBand = opts.outOfBand || function() {};\r\n\r\n  if (uri && 'object' === typeof uri) {\r\n    opts = uri;\r\n    uri = null;\r\n  }\r\n\r\n  if (uri) {\r\n    uri = parseuri(uri);\r\n    opts.hostname = uri.host;\r\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\r\n    opts.port = uri.port;\r\n    if (uri.query) opts.query = uri.query;\r\n  } else if (opts.host) {\r\n    opts.hostname = parseuri(opts.host).host;\r\n  }\r\n\r\n  this.secure = null != opts.secure ? opts.secure\r\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\r\n\r\n  if (opts.hostname && !opts.port) {\r\n    // if no port is specified manually, use the protocol default\r\n    opts.port = this.secure ? '443' : '80';\r\n  }\r\n\r\n  this.agent = opts.agent || false;\r\n  this.hostname = opts.hostname ||\r\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\r\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\r\n      ? location.port\r\n      : (this.secure ? 443 : 80));\r\n  this.query = opts.query || {};\r\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\r\n  this.upgrade = false !== opts.upgrade;\r\n  this.path = (opts.path || '/engine.io');\r\n  if ('string' === typeof this.path) this.path = this.path.replace(/\\/$/, '') + '/';\r\n  this.forceJSONP = !!opts.forceJSONP;\r\n  this.jsonp = false !== opts.jsonp;\r\n  this.forceBase64 = !!opts.forceBase64;\r\n  this.enablesXDR = !!opts.enablesXDR;\r\n  this.timestampParam = opts.timestampParam || 't';\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.transports = opts.transports || ['polling', 'websocket'];\r\n  this.transportOptions = opts.transportOptions || {};\r\n  this.readyState = '';\r\n  this.writeBuffer = [];\r\n  this.prevBufferLen = 0;\r\n  this.policyPort = opts.policyPort || 843;\r\n  this.rememberUpgrade = opts.rememberUpgrade || false;\r\n  this.binaryType = null;\r\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\r\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\r\n\r\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\r\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\r\n    this.perMessageDeflate.threshold = 1024;\r\n  }\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx || null;\r\n  this.key = opts.key || null;\r\n  this.passphrase = opts.passphrase || null;\r\n  this.cert = opts.cert || null;\r\n  this.ca = opts.ca || null;\r\n  this.ciphers = opts.ciphers || null;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\r\n  this.forceNode = !!opts.forceNode;\r\n\r\n  // detect ReactNative environment\r\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\r\n\r\n  // other options for Node.js or ReactNative client\r\n  if (typeof self === 'undefined' || this.isReactNative) {\r\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\r\n      this.extraHeaders = opts.extraHeaders;\r\n    }\r\n\r\n    if (opts.localAddress) {\r\n      this.localAddress = opts.localAddress;\r\n    }\r\n  }\r\n\r\n  // set on handshake\r\n  this.id = null;\r\n  this.upgrades = null;\r\n  this.pingInterval = null;\r\n  this.pingTimeout = null;\r\n\r\n  // set on heartbeat\r\n  this.pingIntervalTimer = null;\r\n  this.pingTimeoutTimer = null;\r\n\r\n  this.open();\r\n}\r\n\r\nSocket.priorWebsocketSuccess = false;\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Protocol version.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.protocol = parser.protocol; // this is an int\r\n\r\n/**\r\n * Expose deps for legacy compatibility\r\n * and standalone browser access.\r\n */\r\n\r\nSocket.Socket = Socket;\r\nSocket.Transport = require('./transport');\r\nSocket.transports = require('./transports/index');\r\nSocket.parser = require('engine.io-parser');\r\n\r\n/**\r\n * Creates transport of the given type.\r\n *\r\n * @param {String} transport name\r\n * @return {Transport}\r\n * @api private\r\n */\r\n\r\nSocket.prototype.createTransport = function (name) {\r\n\r\n  var query = clone(this.query);\r\n\r\n  // append engine.io protocol identifier\r\n  query.EIO = parser.protocol;\r\n\r\n  // transport name\r\n  query.transport = name;\r\n\r\n  // per-transport options\r\n  var options = this.transportOptions[name] || {};\r\n\r\n  // session id if we already have one\r\n  if (this.id) query.sid = this.id;\r\n\r\n  var transport = new transports[name]({\r\n    query: query,\r\n    socket: this,\r\n    agent: options.agent || this.agent,\r\n    hostname: options.hostname || this.hostname,\r\n    port: options.port || this.port,\r\n    secure: options.secure || this.secure,\r\n    path: options.path || this.path,\r\n    forceJSONP: options.forceJSONP || this.forceJSONP,\r\n    jsonp: options.jsonp || this.jsonp,\r\n    forceBase64: options.forceBase64 || this.forceBase64,\r\n    enablesXDR: options.enablesXDR || this.enablesXDR,\r\n    timestampRequests: options.timestampRequests || this.timestampRequests,\r\n    timestampParam: options.timestampParam || this.timestampParam,\r\n    policyPort: options.policyPort || this.policyPort,\r\n    pfx: options.pfx || this.pfx,\r\n    key: options.key || this.key,\r\n    passphrase: options.passphrase || this.passphrase,\r\n    cert: options.cert || this.cert,\r\n    ca: options.ca || this.ca,\r\n    ciphers: options.ciphers || this.ciphers,\r\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\r\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\r\n    extraHeaders: options.extraHeaders || this.extraHeaders,\r\n    forceNode: options.forceNode || this.forceNode,\r\n    localAddress: options.localAddress || this.localAddress,\r\n    requestTimeout: options.requestTimeout || this.requestTimeout,\r\n    protocols: options.protocols || void (0),\r\n    isReactNative: this.isReactNative\r\n  });\r\n\r\n  return transport;\r\n};\r\n\r\nfunction clone (obj) {\r\n  var o = {};\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      o[i] = obj[i];\r\n    }\r\n  }\r\n  return o;\r\n}\r\n\r\n/**\r\n * Initializes transport to use and starts probe.\r\n *\r\n * @api private\r\n */\r\nSocket.prototype.open = function () {\r\n  var transport;\r\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\r\n    transport = 'websocket';\r\n  } else if (0 === this.transports.length) {\r\n    // Emit error on next tick so it can be listened to\r\n    var self = this;\r\n    setTimeout(function () {\r\n      self.emit('error', 'No transports available');\r\n    }, 0);\r\n    return;\r\n  } else {\r\n    transport = this.transports[0];\r\n  }\r\n  this.readyState = 'opening';\r\n\r\n  // Retry with the next transport if the transport is disabled (jsonp: false)\r\n  try {\r\n    transport = this.createTransport(transport);\r\n  } catch (e) {\r\n    this.transports.shift();\r\n    this.open();\r\n    return;\r\n  }\r\n\r\n  transport.open();\r\n  this.setTransport(transport);\r\n};\r\n\r\n/**\r\n * Sets the current transport. Disables the existing one (if any).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setTransport = function (transport) {\r\n\r\n  var self = this;\r\n\r\n  if (this.transport) {\r\n\r\n    this.transport.removeAllListeners();\r\n  }\r\n\r\n  // set up transport\r\n  this.transport = transport;\r\n\r\n  // set up transport listeners\r\n  transport\r\n  .on('outOfBand', function (data) {\r\n    self.onOutOfBand(data);\r\n  })\r\n  .on('drain', function () {\r\n    self.onDrain();\r\n  })\r\n  .on('packet', function (packet) {\r\n    self.onPacket(packet);\r\n  })\r\n  .on('error', function (e) {\r\n    self.onError(e);\r\n  })\r\n  .on('close', function () {\r\n    self.onClose('transport close');\r\n  });\r\n};\r\n\r\n/**\r\n * Probes a transport.\r\n *\r\n * @param {String} transport name\r\n * @api private\r\n */\r\n\r\nSocket.prototype.probe = function (name) {\r\n\r\n  var transport = this.createTransport(name, { probe: 1 });\r\n  var failed = false;\r\n  var self = this;\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n\r\n  function onTransportOpen () {\r\n    if (self.onlyBinaryUpgrades) {\r\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\r\n      failed = failed || upgradeLosesBinary;\r\n    }\r\n    if (failed) return;\r\n\r\n\r\n    transport.send([{ type: 'ping', data: 'probe' }]);\r\n    transport.once('packet', function (msg) {\r\n      if (failed) return;\r\n      if ('pong' === msg.type && 'probe' === msg.data) {\r\n\r\n        self.upgrading = true;\r\n        self.emit('upgrading', transport);\r\n        if (!transport) return;\r\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\r\n\r\n\r\n        self.transport.pause(function () {\r\n          if (failed) return;\r\n          if ('closed' === self.readyState) return;\r\n\r\n\r\n          cleanup();\r\n\r\n          self.setTransport(transport);\r\n          transport.send([{ type: 'upgrade' }]);\r\n          self.emit('upgrade', transport);\r\n          transport = null;\r\n          self.upgrading = false;\r\n          self.flush();\r\n        });\r\n      } else {\r\n\r\n        var err = new Error('probe error');\r\n        err.transport = transport.name;\r\n        self.emit('upgradeError', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  function freezeTransport () {\r\n    if (failed) return;\r\n\r\n    // Any callback called by transport should be ignored since now\r\n    failed = true;\r\n\r\n    cleanup();\r\n\r\n    transport.close();\r\n    transport = null;\r\n  }\r\n\r\n  // Handle any error that happens while probing\r\n  function onerror (err) {\r\n    var error = new Error('probe error: ' + err);\r\n    error.transport = transport.name;\r\n\r\n    freezeTransport();\r\n\r\n\r\n\r\n    self.emit('upgradeError', error);\r\n  }\r\n\r\n  function onTransportClose () {\r\n    onerror('transport closed');\r\n  }\r\n\r\n  // When the socket is closed while we're probing\r\n  function onclose () {\r\n    onerror('socket closed');\r\n  }\r\n\r\n  // When the socket is upgraded while we're probing\r\n  function onupgrade (to) {\r\n    if (transport && to.name !== transport.name) {\r\n\r\n      freezeTransport();\r\n    }\r\n  }\r\n\r\n  // Remove all listeners on the transport and on self\r\n  function cleanup () {\r\n    transport.removeListener('open', onTransportOpen);\r\n    transport.removeListener('error', onerror);\r\n    transport.removeListener('close', onTransportClose);\r\n    self.removeListener('close', onclose);\r\n    self.removeListener('upgrading', onupgrade);\r\n  }\r\n\r\n  transport.once('open', onTransportOpen);\r\n  transport.once('error', onerror);\r\n  transport.once('close', onTransportClose);\r\n\r\n  this.once('close', onclose);\r\n  this.once('upgrading', onupgrade);\r\n\r\n  transport.open();\r\n};\r\n\r\n/**\r\n * Called when connection is deemed open.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.onOpen = function () {\r\n\r\n  this.readyState = 'open';\r\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\r\n  this.emit('open');\r\n  this.flush();\r\n\r\n  // we check for `readyState` in case an `open`\r\n  // listener already closed the socket\r\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\r\n\r\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\r\n      this.probe(this.upgrades[i]);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handles a packet.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onPacket = function (packet) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState ||\r\n      'closing' === this.readyState) {\r\n\r\n\r\n    this.emit('packet', packet);\r\n\r\n    // Socket is live - any packet counts\r\n    this.emit('heartbeat');\r\n\r\n    switch (packet.type) {\r\n      case 'open':\r\n        this.onHandshake(JSON.parse(packet.data));\r\n        break;\r\n\r\n      case 'pong':\r\n        this.setPing();\r\n        this.emit('pong');\r\n        break;\r\n\r\n      case 'error':\r\n        var err = new Error('server error');\r\n        err.code = packet.data;\r\n        this.onError(err);\r\n        break;\r\n\r\n      case 'message':\r\n        this.emit('data', packet.data);\r\n        this.emit('message', packet.data);\r\n        break;\r\n    }\r\n  } else {\r\n\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon handshake completion.\r\n *\r\n * @param {Object} handshake obj\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHandshake = function (data) {\r\n  this.emit('handshake', data);\r\n  this.id = data.sid;\r\n  this.transport.query.sid = data.sid;\r\n  this.upgrades = this.filterUpgrades(data.upgrades);\r\n  this.pingInterval = data.pingInterval;\r\n  this.pingTimeout = data.pingTimeout;\r\n  this.onOpen();\r\n  // In case open handler closes socket\r\n  if ('closed' === this.readyState) return;\r\n  this.setPing();\r\n\r\n  // Prolong liveness of socket on heartbeat\r\n  this.removeListener('heartbeat', this.onHeartbeat);\r\n  this.on('heartbeat', this.onHeartbeat);\r\n};\r\n\r\n/**\r\n * Resets ping timeout.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onHeartbeat = function (timeout) {\r\n  clearTimeout(this.pingTimeoutTimer);\r\n  var self = this;\r\n  self.pingTimeoutTimer = setTimeout(function () {\r\n    if ('closed' === self.readyState) return;\r\n    self.onClose('ping timeout');\r\n  }, timeout || (self.pingInterval + self.pingTimeout));\r\n};\r\n\r\n/**\r\n * Pings server every `this.pingInterval` and expects response\r\n * within `this.pingTimeout` or closes connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.setPing = function () {\r\n  var self = this;\r\n  clearTimeout(self.pingIntervalTimer);\r\n  self.pingIntervalTimer = setTimeout(function () {\r\n\r\n    self.ping();\r\n    self.onHeartbeat(self.pingTimeout);\r\n  }, self.pingInterval);\r\n};\r\n\r\n/**\r\n* Sends a ping packet.\r\n*\r\n* @api private\r\n*/\r\n\r\nSocket.prototype.ping = function () {\r\n  var self = this;\r\n  this.sendPacket('ping', function () {\r\n    self.emit('ping');\r\n  });\r\n};\r\n\r\n/**\r\n * Called on `outOfBand` event\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onOutOfBand = function (data) {\r\n  this.outOfBand(data);\r\n};\r\n\r\n/**\r\n * Called on `drain` event\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onDrain = function () {\r\n  this.writeBuffer.splice(0, this.prevBufferLen);\r\n\r\n  // setting prevBufferLen = 0 is very important\r\n  // for example, when upgrading, upgrade packet is sent over,\r\n  // and a nonzero prevBufferLen could cause problems on `drain`\r\n  this.prevBufferLen = 0;\r\n\r\n  if (0 === this.writeBuffer.length) {\r\n    this.emit('drain');\r\n  } else {\r\n    this.flush();\r\n  }\r\n};\r\n\r\n/**\r\n * Flush write buffers.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.flush = function () {\r\n  if ('closed' !== this.readyState && this.transport.writable &&\r\n    !this.upgrading && this.writeBuffer.length) {\r\n\r\n    this.transport.send(this.writeBuffer);\r\n    // keep track of current length of writeBuffer\r\n    // splice writeBuffer and callbackBuffer on `drain`\r\n    this.prevBufferLen = this.writeBuffer.length;\r\n    this.emit('flush');\r\n  }\r\n};\r\n\r\n/**\r\n * Sends a message.\r\n *\r\n * @param {String} message.\r\n * @param {Function} callback function.\r\n * @param {Object} options.\r\n * @return {Socket} for chaining.\r\n * @api public\r\n */\r\n\r\nSocket.prototype.write =\r\nSocket.prototype.send = function (msg, options, fn) {\r\n  this.sendPacket('message', msg, options, fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {String} packet type.\r\n * @param {String} data.\r\n * @param {Object} options.\r\n * @param {Function} callback function.\r\n * @api private\r\n */\r\n\r\nSocket.prototype.sendPacket = function (type, data, options, fn) {\r\n  if ('function' === typeof data) {\r\n    fn = data;\r\n    data = undefined;\r\n  }\r\n\r\n  if ('function' === typeof options) {\r\n    fn = options;\r\n    options = null;\r\n  }\r\n\r\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\r\n    return;\r\n  }\r\n\r\n  options = options || {};\r\n  options.compress = false !== options.compress;\r\n\r\n  var packet = {\r\n    type: type,\r\n    data: data,\r\n    options: options\r\n  };\r\n  this.emit('packetCreate', packet);\r\n  this.writeBuffer.push(packet);\r\n  if (fn) this.once('flush', fn);\r\n  this.flush();\r\n};\r\n\r\n/**\r\n * Closes the connection.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.readyState = 'closing';\r\n\r\n    var self = this;\r\n\r\n    if (this.writeBuffer.length) {\r\n      this.once('drain', function () {\r\n        if (this.upgrading) {\r\n          waitForUpgrade();\r\n        } else {\r\n          close();\r\n        }\r\n      });\r\n    } else if (this.upgrading) {\r\n      waitForUpgrade();\r\n    } else {\r\n      close();\r\n    }\r\n  }\r\n\r\n  function close () {\r\n    self.onClose('forced close');\r\n\r\n    self.transport.close();\r\n  }\r\n\r\n  function cleanupAndClose () {\r\n    self.removeListener('upgrade', cleanupAndClose);\r\n    self.removeListener('upgradeError', cleanupAndClose);\r\n    close();\r\n  }\r\n\r\n  function waitForUpgrade () {\r\n    // wait for upgrade to finish since we can't send packets while pausing a transport\r\n    self.once('upgrade', cleanupAndClose);\r\n    self.once('upgradeError', cleanupAndClose);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Called upon transport error\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onError = function (err) {\r\n\r\n  Socket.priorWebsocketSuccess = false;\r\n  this.emit('error', err);\r\n  this.onClose('transport error', err);\r\n};\r\n\r\n/**\r\n * Called upon transport close.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onClose = function (reason, desc) {\r\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\r\n\r\n    var self = this;\r\n\r\n    // clear timers\r\n    clearTimeout(this.pingIntervalTimer);\r\n    clearTimeout(this.pingTimeoutTimer);\r\n\r\n    // stop event from firing again for transport\r\n    this.transport.removeAllListeners('close');\r\n\r\n    // ensure transport won't stay open\r\n    this.transport.close();\r\n\r\n    // ignore further transport communication\r\n    this.transport.removeAllListeners();\r\n\r\n    // set ready state\r\n    this.readyState = 'closed';\r\n\r\n    // clear session id\r\n    this.id = null;\r\n\r\n    // emit close event\r\n    this.emit('close', reason, desc);\r\n\r\n    // clean buffers after, so users can still\r\n    // grab the buffers on `close` event\r\n    self.writeBuffer = [];\r\n    self.prevBufferLen = 0;\r\n  }\r\n};\r\n\r\n/**\r\n * Filters upgrades, returning only those matching client transports.\r\n *\r\n * @param {Array} server upgrades\r\n * @api private\r\n *\r\n */\r\n\r\nSocket.prototype.filterUpgrades = function (upgrades) {\r\n  var filteredUpgrades = [];\r\n  for (var i = 0, j = upgrades.length; i < j; i++) {\r\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\r\n  }\r\n  return filteredUpgrades;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/socket.js\n// module id = 11\n// module chunks = 0","/**\r\n * Module dependencies\r\n */\r\n\r\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\r\nvar XHR = require('./polling-xhr');\r\nvar JSONP = require('./polling-jsonp');\r\nvar websocket = require('./websocket');\r\n\r\n/**\r\n * Export transports.\r\n */\r\n\r\nexports.polling = polling;\r\nexports.websocket = websocket;\r\n\r\n/**\r\n * Polling transport polymorphic constructor.\r\n * Decides on xhr vs jsonp based on feature detection.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction polling (opts) {\r\n  var xhr;\r\n  var xd = false;\r\n  var xs = false;\r\n  var jsonp = false !== opts.jsonp;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    xd = opts.hostname !== location.hostname || port !== opts.port;\r\n    xs = opts.secure !== isSSL;\r\n  }\r\n\r\n  opts.xdomain = xd;\r\n  opts.xscheme = xs;\r\n  xhr = new XMLHttpRequest(opts);\r\n\r\n  if ('open' in xhr && !opts.forceJSONP) {\r\n    return new XHR(opts);\r\n  } else {\r\n    if (!jsonp) throw new Error('JSONP disabled');\r\n    return new JSONP(opts);\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/index.js\n// module id = 12\n// module chunks = 0","// browser shim for xmlhttprequest module\r\n\r\nvar hasCORS = require('has-cors');\r\n\r\nmodule.exports = function (opts) {\r\n  var xdomain = opts.xdomain;\r\n\r\n  // scheme must be same when usign XDomainRequest\r\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\r\n  var xscheme = opts.xscheme;\r\n\r\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\r\n  // https://github.com/Automattic/engine.io-client/pull/217\r\n  var enablesXDR = opts.enablesXDR;\r\n\r\n  // XMLHttpRequest can be disabled on IE\r\n  try {\r\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  // Use XDomainRequest for IE8 if enablesXDR is true\r\n  // because loading bar keeps flashing when using jsonp-polling\r\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\r\n  try {\r\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\r\n      return new XDomainRequest();\r\n    }\r\n  } catch (e) { }\r\n\r\n  if (!xdomain) {\r\n    try {\r\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\r\n    } catch (e) { }\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/xmlhttprequest.js\n// module id = 13\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-cors/index.js\n// module id = 14\n// module chunks = 0","/* global attachEvent */\r\n\r\n/**\r\n * Module requirements.\r\n */\r\n\r\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\r\nvar Polling = require('./polling');\r\nvar Emitter = require('component-emitter');\r\nvar inherit = require('component-inherit');\r\nvar debug = require('debug')('engine.io-client:polling-xhr');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = XHR;\r\nmodule.exports.Request = Request;\r\n\r\n/**\r\n * Empty function\r\n */\r\n\r\nfunction empty () {}\r\n\r\n/**\r\n * XHR Polling constructor.\r\n *\r\n * @param {Object} opts\r\n * @api public\r\n */\r\n\r\nfunction XHR (opts) {\r\n  Polling.call(this, opts);\r\n  this.requestTimeout = opts.requestTimeout;\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  if (typeof location !== 'undefined') {\r\n    var isSSL = 'https:' === location.protocol;\r\n    var port = location.port;\r\n\r\n    // some user agents have empty `location.port`\r\n    if (!port) {\r\n      port = isSSL ? 443 : 80;\r\n    }\r\n\r\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\r\n      port !== opts.port;\r\n    this.xs = opts.secure !== isSSL;\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(XHR, Polling);\r\n\r\n/**\r\n * XHR supports binary\r\n */\r\n\r\nXHR.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Creates a request.\r\n *\r\n * @param {String} method\r\n * @api private\r\n */\r\n\r\nXHR.prototype.request = function (opts) {\r\n  opts = opts || {};\r\n  opts.uri = this.uri();\r\n  opts.xd = this.xd;\r\n  opts.xs = this.xs;\r\n  opts.agent = this.agent || false;\r\n  opts.supportsBinary = this.supportsBinary;\r\n  opts.enablesXDR = this.enablesXDR;\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  opts.requestTimeout = this.requestTimeout;\r\n\r\n  // other options for Node.js client\r\n  opts.extraHeaders = this.extraHeaders;\r\n\r\n  return new Request(opts);\r\n};\r\n\r\n/**\r\n * Sends data.\r\n *\r\n * @param {String} data to send.\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doWrite = function (data, fn) {\r\n  var isBinary = typeof data !== 'string' && data !== undefined;\r\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\r\n  var self = this;\r\n  req.on('data', fn);\r\n  req.on('error', function (err) {\r\n    self.onError('xhr post error', err);\r\n  });\r\n  this.sendXhr = req;\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nXHR.prototype.doPoll = function () {\r\n\r\n  var req = this.request();\r\n  var self = this;\r\n  req.on('data', function (data) {\r\n    self.onData(data);\r\n  });\r\n  req.on('error', function (err) {\r\n    self.onError('xhr poll error', err);\r\n  });\r\n  this.pollXhr = req;\r\n};\r\n\r\n/**\r\n * Request constructor\r\n *\r\n * @param {Object} options\r\n * @api public\r\n */\r\n\r\nfunction Request (opts) {\r\n  this.method = opts.method || 'GET';\r\n  this.uri = opts.uri;\r\n  this.xd = !!opts.xd;\r\n  this.xs = !!opts.xs;\r\n  this.async = false !== opts.async;\r\n  this.data = undefined !== opts.data ? opts.data : null;\r\n  this.agent = opts.agent;\r\n  this.isBinary = opts.isBinary;\r\n  this.supportsBinary = opts.supportsBinary;\r\n  this.enablesXDR = opts.enablesXDR;\r\n  this.requestTimeout = opts.requestTimeout;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n\r\n  this.create();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Request.prototype);\r\n\r\n/**\r\n * Creates the XHR object and sends the request.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.create = function () {\r\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n\r\n  var xhr = this.xhr = new XMLHttpRequest(opts);\r\n  var self = this;\r\n\r\n  try {\r\n\r\n    xhr.open(this.method, this.uri, this.async);\r\n    try {\r\n      if (this.extraHeaders) {\r\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\r\n        for (var i in this.extraHeaders) {\r\n          if (this.extraHeaders.hasOwnProperty(i)) {\r\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\r\n          }\r\n        }\r\n      }\r\n    } catch (e) {}\r\n\r\n    if ('POST' === this.method) {\r\n      try {\r\n        if (this.isBinary) {\r\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\r\n        } else {\r\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    try {\r\n      xhr.setRequestHeader('Accept', '*/*');\r\n    } catch (e) {}\r\n\r\n    // ie6 check\r\n    if ('withCredentials' in xhr) {\r\n      xhr.withCredentials = true;\r\n    }\r\n\r\n    if (this.requestTimeout) {\r\n      xhr.timeout = this.requestTimeout;\r\n    }\r\n\r\n    if (this.hasXDR()) {\r\n      xhr.onload = function () {\r\n        self.onLoad();\r\n      };\r\n      xhr.onerror = function () {\r\n        self.onError(xhr.responseText);\r\n      };\r\n    } else {\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 2) {\r\n          try {\r\n            var contentType = xhr.getResponseHeader('Content-Type');\r\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\r\n              xhr.responseType = 'arraybuffer';\r\n            }\r\n          } catch (e) {}\r\n        }\r\n        if (4 !== xhr.readyState) return;\r\n        if (200 === xhr.status || 1223 === xhr.status) {\r\n          self.onLoad();\r\n        } else {\r\n          // make sure the `error` event handler that's user-set\r\n          // does not throw in the same tick and gets caught here\r\n          setTimeout(function () {\r\n            self.onError(xhr.status);\r\n          }, 0);\r\n        }\r\n      };\r\n    }\r\n\r\n\r\n    xhr.send(this.data);\r\n  } catch (e) {\r\n    // Need to defer since .create() is called directly fhrom the constructor\r\n    // and thus the 'error' event can only be only bound *after* this exception\r\n    // occurs.  Therefore, also, we cannot throw here at all.\r\n    setTimeout(function () {\r\n      self.onError(e);\r\n    }, 0);\r\n    return;\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    this.index = Request.requestsCount++;\r\n    Request.requests[this.index] = this;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon successful response.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onSuccess = function () {\r\n  this.emit('success');\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Called if we have data.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onData = function (data) {\r\n  this.emit('data', data);\r\n  this.onSuccess();\r\n};\r\n\r\n/**\r\n * Called upon error.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onError = function (err) {\r\n  this.emit('error', err);\r\n  this.cleanup(true);\r\n};\r\n\r\n/**\r\n * Cleans up house.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.cleanup = function (fromError) {\r\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\r\n    return;\r\n  }\r\n  // xmlhttprequest\r\n  if (this.hasXDR()) {\r\n    this.xhr.onload = this.xhr.onerror = empty;\r\n  } else {\r\n    this.xhr.onreadystatechange = empty;\r\n  }\r\n\r\n  if (fromError) {\r\n    try {\r\n      this.xhr.abort();\r\n    } catch (e) {}\r\n  }\r\n\r\n  if (typeof document !== 'undefined') {\r\n    delete Request.requests[this.index];\r\n  }\r\n\r\n  this.xhr = null;\r\n};\r\n\r\n/**\r\n * Called upon load.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.onLoad = function () {\r\n  var data;\r\n  try {\r\n    var contentType;\r\n    try {\r\n      contentType = this.xhr.getResponseHeader('Content-Type');\r\n    } catch (e) {}\r\n    if (contentType === 'application/octet-stream') {\r\n      data = this.xhr.response || this.xhr.responseText;\r\n    } else {\r\n      data = this.xhr.responseText;\r\n    }\r\n  } catch (e) {\r\n    this.onError(e);\r\n  }\r\n  if (null != data) {\r\n    this.onData(data);\r\n  }\r\n};\r\n\r\n/**\r\n * Check if it has XDomainRequest.\r\n *\r\n * @api private\r\n */\r\n\r\nRequest.prototype.hasXDR = function () {\r\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\r\n};\r\n\r\n/**\r\n * Aborts the request.\r\n *\r\n * @api public\r\n */\r\n\r\nRequest.prototype.abort = function () {\r\n  this.cleanup();\r\n};\r\n\r\n/**\r\n * Aborts pending requests when unloading the window. This is needed to prevent\r\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\r\n * emitted.\r\n */\r\n\r\nRequest.requestsCount = 0;\r\nRequest.requests = {};\r\n\r\nif (typeof document !== 'undefined') {\r\n  if (typeof attachEvent === 'function') {\r\n    attachEvent('onunload', unloadHandler);\r\n  } else if (typeof addEventListener === 'function') {\r\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\r\n    addEventListener(terminationEvent, unloadHandler, false);\r\n  }\r\n}\r\n\r\nfunction unloadHandler () {\r\n  for (var i in Request.requests) {\r\n    if (Request.requests.hasOwnProperty(i)) {\r\n      Request.requests[i].abort();\r\n    }\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-xhr.js\n// module id = 15\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = require('../transport');\r\nvar parseqs = require('parseqs');\r\nvar parser = require('engine.io-parser');\r\nvar inherit = require('component-inherit');\r\nvar yeast = require('yeast');\r\nvar debug = require('debug')('engine.io-client:polling');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Polling;\r\n\r\n/**\r\n * Is XHR2 supported?\r\n */\r\n\r\nvar hasXHR2 = (function () {\r\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\r\n  var xhr = new XMLHttpRequest({ xdomain: false });\r\n  return null != xhr.responseType;\r\n})();\r\n\r\n/**\r\n * Polling interface.\r\n *\r\n * @param {Object} opts\r\n * @api private\r\n */\r\n\r\nfunction Polling (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (!hasXHR2 || forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(Polling, Transport);\r\n\r\n/**\r\n * Transport name.\r\n */\r\n\r\nPolling.prototype.name = 'polling';\r\n\r\n/**\r\n * Opens the socket (triggers polling). We write a PING message to determine\r\n * when the transport is open.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doOpen = function () {\r\n  this.poll();\r\n};\r\n\r\n/**\r\n * Pauses polling.\r\n *\r\n * @param {Function} callback upon buffers are flushed and transport is paused\r\n * @api private\r\n */\r\n\r\nPolling.prototype.pause = function (onPause) {\r\n  var self = this;\r\n\r\n  this.readyState = 'pausing';\r\n\r\n  function pause () {\r\n\r\n    self.readyState = 'paused';\r\n    onPause();\r\n  }\r\n\r\n  if (this.polling || !this.writable) {\r\n    var total = 0;\r\n\r\n    if (this.polling) {\r\n\r\n      total++;\r\n      this.once('pollComplete', function () {\r\n\r\n        --total || pause();\r\n      });\r\n    }\r\n\r\n    if (!this.writable) {\r\n\r\n      total++;\r\n      this.once('drain', function () {\r\n\r\n        --total || pause();\r\n      });\r\n    }\r\n  } else {\r\n    pause();\r\n  }\r\n};\r\n\r\n/**\r\n * Starts polling cycle.\r\n *\r\n * @api public\r\n */\r\n\r\nPolling.prototype.poll = function () {\r\n\r\n  this.polling = true;\r\n  this.doPoll();\r\n  this.emit('poll');\r\n};\r\n\r\n/**\r\n * Overloads onData to detect payloads.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.onData = function (data) {\r\n  var self = this;\r\n\r\n  var callback = function (packet, index, total) {\r\n    // if its the first message we consider the transport open\r\n    if ('opening' === self.readyState) {\r\n      self.onOpen();\r\n    }\r\n\r\n    // if its a close packet, we close the ongoing requests\r\n    if ('close' === packet.type) {\r\n      self.onClose();\r\n      return false;\r\n    }\r\n\r\n    // otherwise bypass onData and handle the message\r\n    self.onPacket(packet);\r\n  };\r\n\r\n  // decode payload\r\n  self.decodePayload(data, this.socket.binaryType, callback);\r\n\r\n  // if an event did not trigger closing\r\n  if ('closed' !== this.readyState) {\r\n    // if we got data we're not polling\r\n    this.polling = false;\r\n    this.emit('pollComplete');\r\n\r\n    if ('open' === this.readyState) {\r\n      this.poll();\r\n    } else {\r\n\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * For polling, send a close packet.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.doClose = function () {\r\n  var self = this;\r\n\r\n  function close () {\r\n\r\n    self.write([{ type: 'close' }]);\r\n  }\r\n\r\n  if ('open' === this.readyState) {\r\n\r\n    close();\r\n  } else {\r\n    // in case we're trying to close while\r\n    // handshaking is in progress (GH-164)\r\n\r\n    this.once('open', close);\r\n  }\r\n};\r\n\r\n/**\r\n * Removes out of band data and decodes the clean payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {Object} typ type\r\n * @param {Function} callback parser callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.decodePayload = function (data, binaryType, callback) {\r\n  var self = this;\r\n  var cleanData = '';\r\n  var outOfBand = '';\r\n  var matchPos = [];\r\n  if (typeof data === 'string') {\r\n    data = data.substring(data.startsWith('ok') ? 2 : 0);\r\n    // find packets\r\n    var pos = data.indexOf(':');\r\n    while (pos !== -1) {\r\n      if ((pos > 0) && (pos < (data.length - 1))\r\n          && (data[pos-1] >= '0') && (data[pos-1] <= '9')\r\n          && (data[pos+1] >= '0') && (data[pos+1] <= '9')) {\r\n        matchPos.push(pos);\r\n      }\r\n      pos = data.indexOf(':', pos + 1);\r\n    }\r\n    // separate packets from out of band data\r\n    var prev = 0;\r\n    var start = 0;\r\n    var end = 0;\r\n    var del = 0;\r\n    var len = 0;\r\n    var heur = 0;\r\n    for (var m=0; m < matchPos.length; ++m) {\r\n      start = matchPos[m] - del - 1;\r\n      end = start + 1;\r\n      while ((start >= 0) && (data[start] >= '0') && (data[start] <= '9')) {\r\n        len = parseInt(data.substring(start, end));\r\n        // heuristic to ignore extra outOfBand digit\r\n        heur = data.length;\r\n        if ((m + 1) < matchPos.length) {\r\n          heur = matchPos[m+1] - del - 1;\r\n        }\r\n        if ((end + len) >= heur) {\r\n          break;\r\n        }\r\n        --start;\r\n      }\r\n      ++start;\r\n      if ((start >= 2) && (data.substring(start - 2, start) === 'ok')) {\r\n        data = data.substring(0, start - 2) + data.substring(start);\r\n        del += 2;\r\n        start -= 2;\r\n      }\r\n      end = matchPos[m] - del;\r\n      len = parseInt(data.substring(start, end));\r\n      cleanData += data.substring(start, end+len+1);\r\n      outOfBand += data.substring(prev, start);\r\n      prev = end+len+1;\r\n    }\r\n    if (prev < data.length) {\r\n      outOfBand += data.substring(prev);\r\n    }\r\n    // decode packets\r\n    if (cleanData) {\r\n      parser.decodePayload(cleanData, binaryType, callback);\r\n    }\r\n    if (outOfBand) {\r\n      self.outOfBand(outOfBand);\r\n    }\r\n  } else if (data) {\r\n    parser.decodePayload(data, binaryType, callback);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes a packets payload.\r\n *\r\n * @param {Array} data packets\r\n * @param {Function} drain callback\r\n * @api private\r\n */\r\n\r\nPolling.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n  var callback = function (packet, index, total) {\r\n    // handle the message\r\n    self.onPacket(packet);\r\n  };\r\n  var callbackfn = function (data) {\r\n    self.decodePayload(data, self.socket.binaryType, callback);\r\n    self.writable = true;\r\n    self.emit('drain');\r\n  };\r\n\r\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\r\n    self.doWrite(data, callbackfn);\r\n  });\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nPolling.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'https' : 'http';\r\n  var port = '';\r\n  var path = (typeof this.path === 'function') ? this.path() : this.path;\r\n\r\n  // cache busting is forced\r\n  if (false !== this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  if (!this.supportsBinary && !query.sid) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\r\n     ('http' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling.js\n// module id = 16\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('engine.io-parser');\r\nvar Emitter = require('component-emitter');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = Transport;\r\n\r\n/**\r\n * Transport abstract constructor.\r\n *\r\n * @param {Object} options.\r\n * @api private\r\n */\r\n\r\nfunction Transport (opts) {\r\n  this.path = opts.path;\r\n  this.hostname = opts.hostname;\r\n  this.port = opts.port;\r\n  this.secure = opts.secure;\r\n  this.query = opts.query;\r\n  this.timestampParam = opts.timestampParam;\r\n  this.timestampRequests = opts.timestampRequests;\r\n  this.readyState = '';\r\n  this.agent = opts.agent || false;\r\n  this.socket = opts.socket;\r\n  this.enablesXDR = opts.enablesXDR;\r\n\r\n  // SSL options for Node.js client\r\n  this.pfx = opts.pfx;\r\n  this.key = opts.key;\r\n  this.passphrase = opts.passphrase;\r\n  this.cert = opts.cert;\r\n  this.ca = opts.ca;\r\n  this.ciphers = opts.ciphers;\r\n  this.rejectUnauthorized = opts.rejectUnauthorized;\r\n  this.forceNode = opts.forceNode;\r\n\r\n  // results of ReactNative environment detection\r\n  this.isReactNative = opts.isReactNative;\r\n\r\n  // other options for Node.js client\r\n  this.extraHeaders = opts.extraHeaders;\r\n  this.localAddress = opts.localAddress;\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Transport.prototype);\r\n\r\n/**\r\n * Emits an error.\r\n *\r\n * @param {String} str\r\n * @return {Transport} for chaining\r\n * @api public\r\n */\r\n\r\nTransport.prototype.onError = function (msg, desc) {\r\n  var err = new Error(msg);\r\n  err.type = 'TransportError';\r\n  err.description = desc;\r\n  this.emit('error', err);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Opens the transport.\r\n *\r\n * @api public\r\n */\r\n\r\nTransport.prototype.open = function () {\r\n  if ('closed' === this.readyState || '' === this.readyState) {\r\n    this.readyState = 'opening';\r\n    this.doOpen();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Closes the transport.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.close = function () {\r\n  if ('opening' === this.readyState || 'open' === this.readyState) {\r\n    this.doClose();\r\n    this.onClose();\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends multiple packets.\r\n *\r\n * @param {Array} packets\r\n * @api private\r\n */\r\n\r\nTransport.prototype.send = function (packets) {\r\n  if ('open' === this.readyState) {\r\n    this.write(packets);\r\n  } else {\r\n    throw new Error('Transport not open');\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon open\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onOpen = function () {\r\n  this.readyState = 'open';\r\n  this.writable = true;\r\n  this.emit('open');\r\n};\r\n\r\n/**\r\n * Called with data.\r\n *\r\n * @param {String} data\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onData = function (data) {\r\n  var packet = parser.decodePacket(data, this.socket.binaryType);\r\n  this.onPacket(packet);\r\n};\r\n\r\n/**\r\n * Called with a decoded packet.\r\n */\r\n\r\nTransport.prototype.onPacket = function (packet) {\r\n  this.emit('packet', packet);\r\n};\r\n\r\n/**\r\n * Called with out of band data.\r\n */\r\n\r\nTransport.prototype.outOfBand = function (data) {\r\n  this.emit('outOfBand', data);\r\n};\r\n\r\n/**\r\n * Called upon close.\r\n *\r\n * @api private\r\n */\r\n\r\nTransport.prototype.onClose = function () {\r\n  this.readyState = 'closed';\r\n  this.emit('close');\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transport.js\n// module id = 17\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-parser/lib/browser.js\n// module id = 18\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-parser/lib/keys.js\n// module id = 19\n// module chunks = 0","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary2/index.js\n// module id = 20\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 21\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 22\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-parser/lib/utf8.js\n// module id = 23\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 24\n// module chunks = 0","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blob/index.js\n// module id = 25\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 26\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 28\n// module chunks = 0","/**\r\n * Module requirements.\r\n */\r\n\r\nvar Polling = require('./polling');\r\nvar inherit = require('component-inherit');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = JSONPPolling;\r\n\r\n/**\r\n * Cached regular expressions.\r\n */\r\n\r\nvar rNewline = /\\n/g;\r\nvar rEscapedNewline = /\\\\n/g;\r\n\r\n/**\r\n * Global JSONP callbacks.\r\n */\r\n\r\nvar callbacks;\r\n\r\n/**\r\n * Noop.\r\n */\r\n\r\nfunction empty () { }\r\n\r\n/**\r\n * Until https://github.com/tc39/proposal-global is shipped.\r\n */\r\nfunction glob () {\r\n  return typeof self !== 'undefined' ? self\r\n      : typeof window !== 'undefined' ? window\r\n      : typeof global !== 'undefined' ? global : {};\r\n}\r\n\r\n/**\r\n * JSONP Polling constructor.\r\n *\r\n * @param {Object} opts.\r\n * @api public\r\n */\r\n\r\nfunction JSONPPolling (opts) {\r\n  Polling.call(this, opts);\r\n\r\n  this.query = this.query || {};\r\n\r\n  // define global callbacks array if not present\r\n  // we do this here (lazily) to avoid unneeded global pollution\r\n  if (!callbacks) {\r\n    // we need to consider multiple engines in the same page\r\n    var global = glob();\r\n    callbacks = global.___eio = (global.___eio || []);\r\n  }\r\n\r\n  // callback identifier\r\n  this.index = callbacks.length;\r\n\r\n  // add callback to jsonp global\r\n  var self = this;\r\n  callbacks.push(function (msg) {\r\n    self.onData(msg);\r\n  });\r\n\r\n  // append to query string\r\n  this.query.j = this.index;\r\n\r\n  // prevent spurious errors from being emitted when the window is unloaded\r\n  if (typeof addEventListener === 'function') {\r\n    addEventListener('beforeunload', function () {\r\n      if (self.script) self.script.onerror = empty;\r\n    }, false);\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from Polling.\r\n */\r\n\r\ninherit(JSONPPolling, Polling);\r\n\r\n/*\r\n * JSONP only supports binary as base64 encoded strings\r\n */\r\n\r\nJSONPPolling.prototype.supportsBinary = false;\r\n\r\n/**\r\n * Closes the socket.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doClose = function () {\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  if (this.form) {\r\n    this.form.parentNode.removeChild(this.form);\r\n    this.form = null;\r\n    this.iframe = null;\r\n  }\r\n\r\n  Polling.prototype.doClose.call(this);\r\n};\r\n\r\n/**\r\n * Starts a poll cycle.\r\n *\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doPoll = function () {\r\n  var self = this;\r\n  var script = document.createElement('script');\r\n\r\n  if (this.script) {\r\n    this.script.parentNode.removeChild(this.script);\r\n    this.script = null;\r\n  }\r\n\r\n  script.async = true;\r\n  script.src = this.uri();\r\n  script.onerror = function (e) {\r\n    self.onError('jsonp poll error', e);\r\n  };\r\n\r\n  var insertAt = document.getElementsByTagName('script')[0];\r\n  if (insertAt) {\r\n    insertAt.parentNode.insertBefore(script, insertAt);\r\n  } else {\r\n    (document.head || document.body).appendChild(script);\r\n  }\r\n  this.script = script;\r\n\r\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\r\n\r\n  if (isUAgecko) {\r\n    setTimeout(function () {\r\n      var iframe = document.createElement('iframe');\r\n      document.body.appendChild(iframe);\r\n      document.body.removeChild(iframe);\r\n    }, 100);\r\n  }\r\n};\r\n\r\n/**\r\n * Writes with a hidden iframe.\r\n *\r\n * @param {String} data to send\r\n * @param {Function} called upon flush.\r\n * @api private\r\n */\r\n\r\nJSONPPolling.prototype.doWrite = function (data, fn) {\r\n  var self = this;\r\n\r\n  if (!this.form) {\r\n    var form = document.createElement('form');\r\n    var area = document.createElement('textarea');\r\n    var id = this.iframeId = 'eio_iframe_' + this.index;\r\n    var iframe;\r\n\r\n    form.className = 'socketio';\r\n    form.style.position = 'absolute';\r\n    form.style.top = '-1000px';\r\n    form.style.left = '-1000px';\r\n    form.target = id;\r\n    form.method = 'POST';\r\n    form.setAttribute('accept-charset', 'utf-8');\r\n    area.name = 'd';\r\n    form.appendChild(area);\r\n    document.body.appendChild(form);\r\n\r\n    this.form = form;\r\n    this.area = area;\r\n  }\r\n\r\n  this.form.action = this.uri();\r\n\r\n  function complete () {\r\n    initIframe();\r\n    fn();\r\n  }\r\n\r\n  function initIframe () {\r\n    if (self.iframe) {\r\n      try {\r\n        self.form.removeChild(self.iframe);\r\n      } catch (e) {\r\n        self.onError('jsonp polling iframe removal error', e);\r\n      }\r\n    }\r\n\r\n    try {\r\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\r\n      iframe = document.createElement(html);\r\n    } catch (e) {\r\n      iframe = document.createElement('iframe');\r\n      iframe.name = self.iframeId;\r\n      iframe.src = 'javascript:0';\r\n    }\r\n\r\n    iframe.id = self.iframeId;\r\n\r\n    self.form.appendChild(iframe);\r\n    self.iframe = iframe;\r\n  }\r\n\r\n  initIframe();\r\n\r\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\r\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\r\n  data = data.replace(rEscapedNewline, '\\\\\\n');\r\n  this.area.value = data.replace(rNewline, '\\\\n');\r\n\r\n  try {\r\n    this.form.submit();\r\n  } catch (e) {}\r\n\r\n  if (this.iframe.attachEvent) {\r\n    this.iframe.onreadystatechange = function () {\r\n      if (self.iframe.readyState === 'complete') {\r\n        complete();\r\n      }\r\n    };\r\n  } else {\r\n    this.iframe.onload = complete;\r\n  }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 29\n// module chunks = 0","/**\r\n * Module dependencies.\r\n */\r\n\r\nvar Transport = require('../transport');\r\nvar parser = require('engine.io-parser');\r\nvar parseqs = require('parseqs');\r\nvar inherit = require('component-inherit');\r\nvar yeast = require('yeast');\r\nvar debug = require('debug')('engine.io-client:websocket');\r\n\r\nvar BrowserWebSocket, NodeWebSocket;\r\n\r\nif (typeof WebSocket !== 'undefined') {\r\n  BrowserWebSocket = WebSocket;\r\n} else if (typeof self !== 'undefined') {\r\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\r\n} else {\r\n  try {\r\n    NodeWebSocket = require('ws');\r\n  } catch (e) { }\r\n}\r\n\r\n/**\r\n * Get either the `WebSocket` or `MozWebSocket` globals\r\n * in the browser or try to resolve WebSocket-compatible\r\n * interface exposed by `ws` for Node-like environment.\r\n */\r\n\r\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = WS;\r\n\r\n/**\r\n * WebSocket transport constructor.\r\n *\r\n * @api {Object} connection options\r\n * @api public\r\n */\r\n\r\nfunction WS (opts) {\r\n  var forceBase64 = (opts && opts.forceBase64);\r\n  if (forceBase64) {\r\n    this.supportsBinary = false;\r\n  }\r\n  this.perMessageDeflate = opts.perMessageDeflate;\r\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\r\n  this.protocols = opts.protocols;\r\n  if (!this.usingBrowserWebSocket) {\r\n    WebSocketImpl = NodeWebSocket;\r\n  }\r\n  Transport.call(this, opts);\r\n}\r\n\r\n/**\r\n * Inherits from Transport.\r\n */\r\n\r\ninherit(WS, Transport);\r\n\r\n/**\r\n * Transport name.\r\n *\r\n * @api public\r\n */\r\n\r\nWS.prototype.name = 'websocket';\r\n\r\n/*\r\n * WebSockets support binary\r\n */\r\n\r\nWS.prototype.supportsBinary = true;\r\n\r\n/**\r\n * Opens socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doOpen = function () {\r\n  if (!this.check()) {\r\n    // let probe timeout\r\n    return;\r\n  }\r\n\r\n  var uri = this.uri();\r\n  var protocols = this.protocols;\r\n  var opts = {\r\n    agent: this.agent,\r\n    perMessageDeflate: this.perMessageDeflate\r\n  };\r\n\r\n  // SSL options for Node.js client\r\n  opts.pfx = this.pfx;\r\n  opts.key = this.key;\r\n  opts.passphrase = this.passphrase;\r\n  opts.cert = this.cert;\r\n  opts.ca = this.ca;\r\n  opts.ciphers = this.ciphers;\r\n  opts.rejectUnauthorized = this.rejectUnauthorized;\r\n  if (this.extraHeaders) {\r\n    opts.headers = this.extraHeaders;\r\n  }\r\n  if (this.localAddress) {\r\n    opts.localAddress = this.localAddress;\r\n  }\r\n\r\n  try {\r\n    this.ws =\r\n      this.usingBrowserWebSocket && !this.isReactNative\r\n        ? protocols\r\n          ? new WebSocketImpl(uri, protocols)\r\n          : new WebSocketImpl(uri)\r\n        : new WebSocketImpl(uri, protocols, opts);\r\n  } catch (err) {\r\n    return this.emit('error', err);\r\n  }\r\n\r\n  if (this.ws.binaryType === undefined) {\r\n    this.supportsBinary = false;\r\n  }\r\n\r\n  if (this.ws.supports && this.ws.supports.binary) {\r\n    this.supportsBinary = true;\r\n    this.ws.binaryType = 'nodebuffer';\r\n  } else {\r\n    this.ws.binaryType = 'arraybuffer';\r\n  }\r\n\r\n  this.addEventListeners();\r\n};\r\n\r\n/**\r\n * Adds event listeners to the socket\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.addEventListeners = function () {\r\n  var self = this;\r\n\r\n  this.ws.onopen = function () {\r\n    self.onOpen();\r\n  };\r\n  this.ws.onclose = function () {\r\n    self.onClose();\r\n  };\r\n  this.ws.onmessage = function (ev) {\r\n    self.onData(ev.data);\r\n  };\r\n  this.ws.onerror = function (e) {\r\n    self.onError('websocket error', e);\r\n  };\r\n};\r\n\r\n/**\r\n * Writes data to socket.\r\n *\r\n * @param {Array} array of packets.\r\n * @api private\r\n */\r\n\r\nWS.prototype.write = function (packets) {\r\n  var self = this;\r\n  this.writable = false;\r\n\r\n  // encodePacket efficient as it uses WS framing\r\n  // no need for encodePayload\r\n  var total = packets.length;\r\n  for (var i = 0, l = total; i < l; i++) {\r\n    (function (packet) {\r\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\r\n        if (!self.usingBrowserWebSocket) {\r\n          // always create a new object (GH-437)\r\n          var opts = {};\r\n          if (packet.options) {\r\n            opts.compress = packet.options.compress;\r\n          }\r\n\r\n          if (self.perMessageDeflate) {\r\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\r\n            if (len < self.perMessageDeflate.threshold) {\r\n              opts.compress = false;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Sometimes the websocket has already been closed but the browser didn't\r\n        // have a chance of informing us about it yet, in that case send will\r\n        // throw an error\r\n        try {\r\n          if (self.usingBrowserWebSocket) {\r\n            // TypeError is thrown when passing the second argument on Safari\r\n            self.ws.send(data);\r\n          } else {\r\n            self.ws.send(data, opts);\r\n          }\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        --total || done();\r\n      });\r\n    })(packets[i]);\r\n  }\r\n\r\n  function done () {\r\n    self.emit('flush');\r\n\r\n    // fake drain\r\n    // defer to next tick to allow Socket to clear writeBuffer\r\n    setTimeout(function () {\r\n      self.writable = true;\r\n      self.emit('drain');\r\n    }, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon close\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.onClose = function () {\r\n  Transport.prototype.onClose.call(this);\r\n};\r\n\r\n/**\r\n * Closes socket.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.doClose = function () {\r\n  if (typeof this.ws !== 'undefined') {\r\n    this.ws.close();\r\n  }\r\n};\r\n\r\n/**\r\n * Generates uri for connection.\r\n *\r\n * @api private\r\n */\r\n\r\nWS.prototype.uri = function () {\r\n  var query = this.query || {};\r\n  var schema = this.secure ? 'wss' : 'ws';\r\n  var port = '';\r\n  var path = (typeof this.path === 'function') ? this.path() : this.path;\r\n\r\n  // avoid port if default for schema\r\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\r\n    ('ws' === schema && Number(this.port) !== 80))) {\r\n    port = ':' + this.port;\r\n  }\r\n\r\n  // append timestamp to URI\r\n  if (this.timestampRequests) {\r\n    query[this.timestampParam] = yeast();\r\n  }\r\n\r\n  // communicate binary support capabilities\r\n  if (!this.supportsBinary) {\r\n    query.b64 = 1;\r\n  }\r\n\r\n  query = parseqs.encode(query);\r\n\r\n  // prepend ? to query\r\n  if (query.length) {\r\n    query = '?' + query;\r\n  }\r\n\r\n  var ipv6 = this.hostname.indexOf(':') !== -1;\r\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\r\n};\r\n\r\n/**\r\n * Feature detection for WebSocket.\r\n *\r\n * @return {Boolean} whether this transport is available.\r\n * @api public\r\n */\r\n\r\nWS.prototype.check = function () {\r\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/websocket.js\n// module id = 30\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/indexof/index.js\n// module id = 32\n// module chunks = 0","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parser = require('socket.io-parser');\r\nvar Emitter = require('component-emitter');\r\nvar toArray = require('to-array');\r\nvar on = require('./on');\r\nvar bind = require('component-bind');\r\nvar debug = require('debug')('socket.io-client:socket');\r\nvar parseqs = require('parseqs');\r\nvar hasBin = require('has-binary2');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = exports = Socket;\r\n\r\n/**\r\n * Internal events (blacklisted).\r\n * These events can't be emitted by the user.\r\n *\r\n * @api private\r\n */\r\n\r\nvar events = {\r\n  connect: 1,\r\n  connect_error: 1,\r\n  connect_timeout: 1,\r\n  connecting: 1,\r\n  disconnect: 1,\r\n  error: 1,\r\n  reconnect: 1,\r\n  reconnect_attempt: 1,\r\n  reconnect_failed: 1,\r\n  reconnect_error: 1,\r\n  reconnecting: 1,\r\n  ping: 1,\r\n  pong: 1\r\n};\r\n\r\n/**\r\n * Shortcut to `Emitter#emit`.\r\n */\r\n\r\nvar emit = Emitter.prototype.emit;\r\n\r\n/**\r\n * `Socket` constructor.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Socket (io, nsp, opts) {\r\n  this.io = io;\r\n  this.nsp = nsp;\r\n  this.json = this; // compat\r\n  this.ids = 0;\r\n  this.acks = {};\r\n  this.receiveBuffer = [];\r\n  this.sendBuffer = [];\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  this.flags = {};\r\n  if (opts && opts.query) {\r\n    this.query = opts.query;\r\n  }\r\n  if (this.io.autoConnect) this.open();\r\n}\r\n\r\n/**\r\n * Mix in `Emitter`.\r\n */\r\n\r\nEmitter(Socket.prototype);\r\n\r\n/**\r\n * Subscribe to open, close and packet events\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.subEvents = function () {\r\n  if (this.subs) return;\r\n\r\n  var io = this.io;\r\n  this.subs = [\r\n    on(io, 'open', bind(this, 'onopen')),\r\n    on(io, 'packet', bind(this, 'onpacket')),\r\n    on(io, 'close', bind(this, 'onclose'))\r\n  ];\r\n};\r\n\r\n/**\r\n * \"Opens\" the socket.\r\n *\r\n * @api public\r\n */\r\n\r\nSocket.prototype.open =\r\nSocket.prototype.connect = function () {\r\n  if (this.connected) return this;\r\n\r\n  this.subEvents();\r\n  this.io.open(); // ensure open\r\n  if ('open' === this.io.readyState) this.onopen();\r\n  this.emit('connecting');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a `message` event.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.send = function () {\r\n  var args = toArray(arguments);\r\n  args.unshift('message');\r\n  this.emit.apply(this, args);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Override `emit`.\r\n * If the event is in `events`, it's emitted normally.\r\n *\r\n * @param {String} event name\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.emit = function (ev) {\r\n  if (events.hasOwnProperty(ev)) {\r\n    emit.apply(this, arguments);\r\n    return this;\r\n  }\r\n\r\n  var args = toArray(arguments);\r\n  var packet = {\r\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\r\n    data: args\r\n  };\r\n\r\n  packet.options = {};\r\n  packet.options.compress = !this.flags || false !== this.flags.compress;\r\n\r\n  // event ack callback\r\n  if ('function' === typeof args[args.length - 1]) {\r\n\r\n    this.acks[this.ids] = args.pop();\r\n    packet.id = this.ids++;\r\n  }\r\n\r\n  if (this.connected) {\r\n    this.packet(packet);\r\n  } else {\r\n    this.sendBuffer.push(packet);\r\n  }\r\n\r\n  this.flags = {};\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sends a packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.packet = function (packet) {\r\n  packet.nsp = this.nsp;\r\n  this.io.packet(packet);\r\n};\r\n\r\n/**\r\n * Called upon engine `open`.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onopen = function () {\r\n\r\n\r\n  // write connect packet if necessary\r\n  if ('/' !== this.nsp) {\r\n    if (this.query) {\r\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\r\n\r\n      this.packet({type: parser.CONNECT, query: query});\r\n    } else {\r\n      this.packet({type: parser.CONNECT});\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon engine `close`.\r\n *\r\n * @param {String} reason\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onclose = function (reason) {\r\n\r\n  this.connected = false;\r\n  this.disconnected = true;\r\n  delete this.id;\r\n  this.emit('disconnect', reason);\r\n};\r\n\r\n/**\r\n * Called with socket packet.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onpacket = function (packet) {\r\n  var sameNamespace = packet.nsp === this.nsp;\r\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\r\n\r\n  if (!sameNamespace && !rootNamespaceError) return;\r\n\r\n  switch (packet.type) {\r\n    case parser.CONNECT:\r\n      this.onconnect();\r\n      break;\r\n\r\n    case parser.EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.BINARY_EVENT:\r\n      this.onevent(packet);\r\n      break;\r\n\r\n    case parser.ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.BINARY_ACK:\r\n      this.onack(packet);\r\n      break;\r\n\r\n    case parser.DISCONNECT:\r\n      this.ondisconnect();\r\n      break;\r\n\r\n    case parser.ERROR:\r\n      this.emit('error', packet.data);\r\n      break;\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon a server event.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onevent = function (packet) {\r\n  var args = packet.data || [];\r\n\r\n\r\n  if (null != packet.id) {\r\n\r\n    args.push(this.ack(packet.id));\r\n  }\r\n\r\n  if (this.connected) {\r\n    emit.apply(this, args);\r\n  } else {\r\n    this.receiveBuffer.push(args);\r\n  }\r\n};\r\n\r\n/**\r\n * Produces an ack callback to emit with an event.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ack = function (id) {\r\n  var self = this;\r\n  var sent = false;\r\n  return function () {\r\n    // prevent double callbacks\r\n    if (sent) return;\r\n    sent = true;\r\n    var args = toArray(arguments);\r\n\r\n\r\n    self.packet({\r\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\r\n      id: id,\r\n      data: args\r\n    });\r\n  };\r\n};\r\n\r\n/**\r\n * Called upon a server acknowlegement.\r\n *\r\n * @param {Object} packet\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onack = function (packet) {\r\n  var ack = this.acks[packet.id];\r\n  if ('function' === typeof ack) {\r\n\r\n    ack.apply(this, packet.data);\r\n    delete this.acks[packet.id];\r\n  } else {\r\n\r\n  }\r\n};\r\n\r\n/**\r\n * Called upon server connect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.onconnect = function () {\r\n  this.connected = true;\r\n  this.disconnected = false;\r\n  this.emit('connect');\r\n  this.emitBuffered();\r\n};\r\n\r\n/**\r\n * Emit buffered events (received and emitted).\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.emitBuffered = function () {\r\n  var i;\r\n  for (i = 0; i < this.receiveBuffer.length; i++) {\r\n    emit.apply(this, this.receiveBuffer[i]);\r\n  }\r\n  this.receiveBuffer = [];\r\n\r\n  for (i = 0; i < this.sendBuffer.length; i++) {\r\n    this.packet(this.sendBuffer[i]);\r\n  }\r\n  this.sendBuffer = [];\r\n};\r\n\r\n/**\r\n * Called upon server disconnect.\r\n *\r\n * @api private\r\n */\r\n\r\nSocket.prototype.ondisconnect = function () {\r\n\r\n  this.destroy();\r\n  this.onclose('io server disconnect');\r\n};\r\n\r\n/**\r\n * Called upon forced client/server side disconnections,\r\n * this method ensures the manager stops tracking us and\r\n * that reconnections don't get triggered for this.\r\n *\r\n * @api private.\r\n */\r\n\r\nSocket.prototype.destroy = function () {\r\n  if (this.subs) {\r\n    // clean subscriptions to avoid reconnections\r\n    for (var i = 0; i < this.subs.length; i++) {\r\n      this.subs[i].destroy();\r\n    }\r\n    this.subs = null;\r\n  }\r\n\r\n  this.io.destroy(this);\r\n};\r\n\r\n/**\r\n * Disconnects the socket manually.\r\n *\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.close =\r\nSocket.prototype.disconnect = function () {\r\n  if (this.connected) {\r\n\r\n    this.packet({ type: parser.DISCONNECT });\r\n  }\r\n\r\n  // remove socket from pool\r\n  this.destroy();\r\n\r\n  if (this.connected) {\r\n    // fire events\r\n    this.onclose('io client disconnect');\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the compress flag.\r\n *\r\n * @param {Boolean} if `true`, compresses the sending data\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.compress = function (compress) {\r\n  this.flags.compress = compress;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Sets the binary flag\r\n *\r\n * @param {Boolean} whether the emitted data contains binary\r\n * @return {Socket} self\r\n * @api public\r\n */\r\n\r\nSocket.prototype.binary = function (binary) {\r\n  this.flags.binary = binary;\r\n  return this;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/socket.js","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 34\n// module chunks = 0","\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = on;\r\n\r\n/**\r\n * Helper for subscriptions.\r\n *\r\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\r\n * @param {String} event name\r\n * @param {Function} callback\r\n * @api public\r\n */\r\n\r\nfunction on (obj, ev, fn) {\r\n  obj.on(ev, fn);\r\n  return {\r\n    destroy: function () {\r\n      obj.removeListener(ev, fn);\r\n    }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/on.js","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 36\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 37\n// module chunks = 0"],"sourceRoot":""}